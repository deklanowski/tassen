[
{
  "log_file_id": 4, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_ipv4", 
    "parse_tcp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'tbl_bng749', u'bng749')", 
    "(u'node_5', (True, None))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 8, 
  "ingress_path_len": 4, 
  "time_sec_generate_ingress_constraints": 0.0015230178833007812, 
  "time_sec_solve": 6.580352783203125e-05, 
  "time_sec_simulate_packet": 0.00012302398681640625, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_ipv4", 
    "parse_ipv4 -> parse_tcp", 
    "parse_tcp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "u'bng749'", 
    "(True, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 5, 
  "result": "SUCCESS", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_ipv4", 
    "parse_tcp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'tbl_bng749', u'bng749')", 
    "(u'node_5', (False, None))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [
    {
      "port": 0, 
      "packet_len_bytes": 64, 
      "packet_hexstr": "000000000000000000000000000088a8000081000000080000000000000000000006000000000000000000000000000000000000000000000000000000000000"
    }
  ], 
  "parser_path_len": 8, 
  "ingress_path_len": 4, 
  "time_sec_generate_ingress_constraints": 0.0014989376068115234, 
  "time_sec_solve": 0.010814905166625977, 
  "time_sec_simulate_packet": 0.04827594757080078, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_ipv4", 
    "parse_ipv4 -> parse_tcp", 
    "parse_tcp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "u'bng749'", 
    "(False, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 6, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_ipv4", 
    "parse_tcp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 8, 
  "ingress_path_len": 2, 
  "time_sec_generate_ingress_constraints": 0.001474142074584961, 
  "time_sec_solve": 2.9087066650390625e-05, 
  "time_sec_simulate_packet": 0.00011086463928222656, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_ipv4", 
    "parse_ipv4 -> parse_tcp", 
    "parse_tcp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 13, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "parse_udp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'node_10', (True, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS')))", 
    "(u'tbl_bng761', u'bng761')", 
    "(u'IngressPipe.upstream.lines', u'IngressPipe.upstream.set_line')", 
    "(u'tbl_bng499', u'bng499')", 
    "(u'IngressPipe.upstream.pppoe_punts', u'IngressPipe.upstream.punt')", 
    "(u'node_15', (True, (u'./p4src/bng.p4', 501, u'!(lmeta.punted)')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 13, 
  "time_sec_generate_ingress_constraints": 0.0015010833740234375, 
  "time_sec_solve": 6.389617919921875e-05, 
  "time_sec_simulate_packet": 0.00015020370483398438, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> parse_udp", 
    "parse_udp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "(True, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS'))", 
    "u'bng761'", 
    "u'IngressPipe.upstream.set_line'", 
    "u'bng499'", 
    "u'IngressPipe.upstream.punt'", 
    "(True, (u'./p4src/bng.p4', 501, u'!(lmeta.punted)'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 18, 
  "result": "SUCCESS", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "parse_udp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'node_10', (True, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS')))", 
    "(u'tbl_bng761', u'bng761')", 
    "(u'IngressPipe.upstream.lines', u'IngressPipe.upstream.set_line')", 
    "(u'tbl_bng499', u'bng499')", 
    "(u'IngressPipe.upstream.pppoe_punts', u'IngressPipe.upstream.punt')", 
    "(u'node_15', (False, (u'./p4src/bng.p4', 501, u'!(lmeta.punted)')))", 
    "(u'IngressPipe.acl.acls', u'IngressPipe.acl.set_port')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (True, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))", 
    "(u'tbl_bng326', u'bng326')"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [
    "table_add IngressPipe.if_types IngressPipe.set_if_type 0 => 2", 
    "table_add IngressPipe.my_stations IngressPipe.set_my_station 0 0 => ", 
    "table_add IngressPipe.upstream.lines IngressPipe.upstream.set_line 0 0 0 => 0", 
    "table_add IngressPipe.upstream.pppoe_punts IngressPipe.upstream.punt 0 33&&&65535 =>  1", 
    "table_add IngressPipe.acl.acls IngressPipe.acl.set_port 0&&&511 2&&&7 0&&&281474976710655 0&&&281474976710655 34915&&&65535 0&&&4294967295 0&&&4294967295 17&&&255 0&&&65535 0&&&65535 => 0 1", 
    "table_add IngressPipe.accounting_ids IngressPipe.set_accounting_id 0 0 => 0"
  ], 
  "input_packets": [
    {
      "port": 0, 
      "packet_len_bytes": 54, 
      "packet_hexstr": "000000000000000000000000910000008863000000000000002100000000000000000011000000000000000000000000000000000000"
    }
  ], 
  "parser_path_len": 7, 
  "ingress_path_len": 17, 
  "time_sec_generate_ingress_constraints": 0.0008950233459472656, 
  "time_sec_solve": 0.010822057723999023, 
  "time_sec_simulate_packet": 0.17210102081298828, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> parse_udp", 
    "parse_udp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "(True, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS'))", 
    "u'bng761'", 
    "u'IngressPipe.upstream.set_line'", 
    "u'bng499'", 
    "u'IngressPipe.upstream.punt'", 
    "(False, (u'./p4src/bng.p4', 501, u'!(lmeta.punted)'))", 
    "u'IngressPipe.acl.set_port'", 
    "u'IngressPipe.set_accounting_id'", 
    "(True, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))", 
    "u'bng326'"
  ], 
  "table_setup_cmd_data": [
    {
      "command": "table_add", 
      "table_name": "IngressPipe.if_types", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_if_type", 
      "action_parameters": [
        {
          "name": "if_type", 
          "value": 2
        }
      ]
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.my_stations", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "ethernet.dst_addr", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_my_station", 
      "action_parameters": []
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.upstream.lines", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.c_tag", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.s_tag", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.upstream.set_line", 
      "action_parameters": [
        {
          "name": "line_id", 
          "value": 0
        }
      ]
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.upstream.pppoe_punts", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "pppoe.code", 
          "value": 0
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "pppoe.proto", 
          "value": 33, 
          "mask": 65535
        }
      ], 
      "action_name": "IngressPipe.upstream.punt", 
      "action_parameters": [], 
      "priority": 1
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.acl.acls", 
      "keys": [
        {
          "match_kind": "ternary", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0, 
          "mask": 511
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.if_type", 
          "value": 2, 
          "mask": 7
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ethernet.src_addr", 
          "value": 0, 
          "mask": 281474976710655
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ethernet.dst_addr", 
          "value": 0, 
          "mask": 281474976710655
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "eth_type.value", 
          "value": 34915, 
          "mask": 65535
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.src_addr", 
          "value": 0, 
          "mask": 4294967295
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.dst_addr", 
          "value": 0, 
          "mask": 4294967295
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.proto", 
          "value": 17, 
          "mask": 255
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.l4_sport", 
          "value": 0, 
          "mask": 65535
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.l4_dport", 
          "value": 0, 
          "mask": 65535
        }
      ], 
      "action_name": "IngressPipe.acl.set_port", 
      "action_parameters": [
        {
          "name": "port", 
          "value": 0
        }
      ], 
      "priority": 1
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.accounting_ids", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.line_id", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.cos_id", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_accounting_id", 
      "action_parameters": [
        {
          "name": "accounting_id", 
          "value": 0
        }
      ]
    }
  ]
},
{
  "log_file_id": 19, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "parse_udp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'node_10', (True, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS')))", 
    "(u'tbl_bng761', u'bng761')", 
    "(u'IngressPipe.upstream.lines', u'IngressPipe.upstream.set_line')", 
    "(u'tbl_bng499', u'bng499')", 
    "(u'IngressPipe.upstream.pppoe_punts', u'IngressPipe.upstream.punt')", 
    "(u'node_15', (False, (u'./p4src/bng.p4', 501, u'!(lmeta.punted)')))", 
    "(u'IngressPipe.acl.acls', u'IngressPipe.acl.set_port')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 16, 
  "time_sec_generate_ingress_constraints": 0.0014348030090332031, 
  "time_sec_solve": 2.8133392333984375e-05, 
  "time_sec_simulate_packet": 0.0001728534698486328, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> parse_udp", 
    "parse_udp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "(True, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS'))", 
    "u'bng761'", 
    "u'IngressPipe.upstream.set_line'", 
    "u'bng499'", 
    "u'IngressPipe.upstream.punt'", 
    "(False, (u'./p4src/bng.p4', 501, u'!(lmeta.punted)'))", 
    "u'IngressPipe.acl.set_port'", 
    "u'IngressPipe.set_accounting_id'", 
    "(False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 29, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "parse_udp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 7, 
  "time_sec_generate_ingress_constraints": 0.0013859272003173828, 
  "time_sec_solve": 2.8848648071289062e-05, 
  "time_sec_simulate_packet": 0.00012612342834472656, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> parse_udp", 
    "parse_udp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 33, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "parse_udp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (False, None))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 3, 
  "time_sec_generate_ingress_constraints": 0.0014019012451171875, 
  "time_sec_solve": 2.3126602172851562e-05, 
  "time_sec_simulate_packet": 0.00011706352233886719, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> parse_udp", 
    "parse_udp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(False, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 34, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "parse_udp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 2, 
  "time_sec_generate_ingress_constraints": 0.0013189315795898438, 
  "time_sec_solve": 2.288818359375e-05, 
  "time_sec_simulate_packet": 0.00010418891906738281, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> parse_udp", 
    "parse_udp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 4, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'tbl_bng749', u'bng749')", 
    "(u'node_5', (True, None))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 4, 
  "time_sec_generate_ingress_constraints": 0.0015959739685058594, 
  "time_sec_solve": 2.9087066650390625e-05, 
  "time_sec_simulate_packet": 0.00011801719665527344, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "u'bng749'", 
    "(True, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 5, 
  "result": "SUCCESS", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'tbl_bng749', u'bng749')", 
    "(u'node_5', (False, None))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [
    {
      "port": 0, 
      "packet_len_bytes": 32, 
      "packet_hexstr": "0000000000000000000000000000810000008100000088640000000000000000"
    }
  ], 
  "parser_path_len": 7, 
  "ingress_path_len": 4, 
  "time_sec_generate_ingress_constraints": 0.0014259815216064453, 
  "time_sec_solve": 0.008936882019042969, 
  "time_sec_simulate_packet": 0.0361630916595459, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "u'bng749'", 
    "(False, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 6, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 2, 
  "time_sec_generate_ingress_constraints": 0.002009868621826172, 
  "time_sec_solve": 4.00543212890625e-05, 
  "time_sec_simulate_packet": 0.00014495849609375, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 11, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'nop')", 
    "(u'node_9', (False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'IngressPipe.acl.acls', u'IngressPipe.acl.punt')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))", 
    "(u'node_47', (True, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 11, 
  "time_sec_generate_ingress_constraints": 0.001421213150024414, 
  "time_sec_solve": 3.1948089599609375e-05, 
  "time_sec_simulate_packet": 0.00015091896057128906, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'nop'", 
    "(False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "u'IngressPipe.acl.punt'", 
    "u'IngressPipe.set_accounting_id'", 
    "(False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))", 
    "(True, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 12, 
  "result": "SUCCESS", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'nop')", 
    "(u'node_9', (False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'IngressPipe.acl.acls', u'IngressPipe.acl.punt')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))", 
    "(u'node_47', (False, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM')))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [
    "table_add IngressPipe.if_types IngressPipe.set_if_type 0 => 0", 
    "table_add IngressPipe.my_stations nop 0 0 => ", 
    "table_add IngressPipe.acl.acls IngressPipe.acl.punt 0&&&511 0&&&7 0&&&281474976710655 0&&&281474976710655 0&&&65535 0&&&4294967295 0&&&4294967295 0&&&255 0&&&65535 0&&&65535 =>  1", 
    "table_add IngressPipe.accounting_ids IngressPipe.set_accounting_id 0 0 => 0"
  ], 
  "input_packets": [
    {
      "port": 0, 
      "packet_len_bytes": 14, 
      "packet_hexstr": "0000000000000000000000000000"
    }
  ], 
  "parser_path_len": 3, 
  "ingress_path_len": 11, 
  "time_sec_generate_ingress_constraints": 0.0013959407806396484, 
  "time_sec_solve": 0.009560108184814453, 
  "time_sec_simulate_packet": 0.051138877868652344, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'nop'", 
    "(False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "u'IngressPipe.acl.punt'", 
    "u'IngressPipe.set_accounting_id'", 
    "(False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))", 
    "(False, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM'))"
  ], 
  "table_setup_cmd_data": [
    {
      "command": "table_add", 
      "table_name": "IngressPipe.if_types", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_if_type", 
      "action_parameters": [
        {
          "name": "if_type", 
          "value": 0
        }
      ]
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.my_stations", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "ethernet.dst_addr", 
          "value": 0
        }
      ], 
      "action_name": "nop", 
      "action_parameters": []
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.acl.acls", 
      "keys": [
        {
          "match_kind": "ternary", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0, 
          "mask": 511
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.if_type", 
          "value": 0, 
          "mask": 7
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ethernet.src_addr", 
          "value": 0, 
          "mask": 281474976710655
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ethernet.dst_addr", 
          "value": 0, 
          "mask": 281474976710655
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "eth_type.value", 
          "value": 0, 
          "mask": 65535
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.src_addr", 
          "value": 0, 
          "mask": 4294967295
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.dst_addr", 
          "value": 0, 
          "mask": 4294967295
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.proto", 
          "value": 0, 
          "mask": 255
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.l4_sport", 
          "value": 0, 
          "mask": 65535
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.l4_dport", 
          "value": 0, 
          "mask": 65535
        }
      ], 
      "action_name": "IngressPipe.acl.punt", 
      "action_parameters": [], 
      "priority": 1
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.accounting_ids", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.line_id", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.cos_id", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_accounting_id", 
      "action_parameters": [
        {
          "name": "accounting_id", 
          "value": 0
        }
      ]
    }
  ]
},
{
  "log_file_id": 13, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'nop')", 
    "(u'node_9', (False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'IngressPipe.acl.acls', u'IngressPipe.acl.punt')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (True, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 10, 
  "time_sec_generate_ingress_constraints": 0.0014431476593017578, 
  "time_sec_solve": 3.0994415283203125e-05, 
  "time_sec_simulate_packet": 0.0001888275146484375, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'nop'", 
    "(False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "u'IngressPipe.acl.punt'", 
    "u'IngressPipe.set_accounting_id'", 
    "(True, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 19, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'nop')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 7, 
  "time_sec_generate_ingress_constraints": 0.0015780925750732422, 
  "time_sec_solve": 3.3855438232421875e-05, 
  "time_sec_simulate_packet": 0.00013899803161621094, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'nop'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 23, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (False, None))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 3, 
  "time_sec_generate_ingress_constraints": 0.0016469955444335938, 
  "time_sec_solve": 2.9087066650390625e-05, 
  "time_sec_simulate_packet": 0.00011897087097167969, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(False, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 24, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 2, 
  "time_sec_generate_ingress_constraints": 0.0014050006866455078, 
  "time_sec_solve": 2.47955322265625e-05, 
  "time_sec_simulate_packet": 0.00010609626770019531, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 4, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_ipv4", 
    "parse_icmp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'tbl_bng749', u'bng749')", 
    "(u'node_5', (True, None))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 4, 
  "time_sec_generate_ingress_constraints": 0.0015749931335449219, 
  "time_sec_solve": 3.0994415283203125e-05, 
  "time_sec_simulate_packet": 0.00012087821960449219, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_ipv4", 
    "parse_ipv4 -> parse_icmp", 
    "parse_icmp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "u'bng749'", 
    "(True, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 5, 
  "result": "SUCCESS", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_ipv4", 
    "parse_icmp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'tbl_bng749', u'bng749')", 
    "(u'node_5', (False, None))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [
    {
      "port": 0, 
      "packet_len_bytes": 56, 
      "packet_hexstr": "000000000000000000000000000088a800000800000000000000000000010000000000000000000000000000000000000000000000000000"
    }
  ], 
  "parser_path_len": 7, 
  "ingress_path_len": 4, 
  "time_sec_generate_ingress_constraints": 0.0014770030975341797, 
  "time_sec_solve": 0.01100611686706543, 
  "time_sec_simulate_packet": 0.04011392593383789, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_ipv4", 
    "parse_ipv4 -> parse_icmp", 
    "parse_icmp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "u'bng749'", 
    "(False, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 6, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_ipv4", 
    "parse_icmp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 2, 
  "time_sec_generate_ingress_constraints": 0.0016608238220214844, 
  "time_sec_solve": 8.797645568847656e-05, 
  "time_sec_simulate_packet": 0.0001270771026611328, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_ipv4", 
    "parse_ipv4 -> parse_icmp", 
    "parse_icmp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 20, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'node_10', (False, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS')))", 
    "(u'node_31', (True, (u'./p4src/bng.p4', 763, u'lmeta.if_type == IF_CORE')))", 
    "(u'tbl_bng613', u'bng613')", 
    "(u'IngressPipe.downstream.lines_v4', u'IngressPipe.downstream.set_line')", 
    "(u'node_34', (True, (u'./p4src/bng.p4', 362, u'hdr.ipv4.isValid()')))", 
    "(u'IngressPipe.downstream.cos.services_v4', u'IngressPipe.downstream.cos.set_cos_id')", 
    "(u'IngressPipe.downstream.attachments_v4', u'IngressPipe.downstream.set_pppoe_attachment_v4')", 
    "(u'node_38', (True, (u'./p4src/bng.p4', 304, u'hdr.ipv4.isValid()')))", 
    "(u'node_39', (True, (u'./p4src/bng.p4', 305, u'hdr.ipv4.ttl > 1')))", 
    "(u'tbl_bng306_0', u'bng306_0')", 
    "(u'IngressPipe.acl.acls', u'IngressPipe.acl.drop')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (True, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 20, 
  "time_sec_generate_ingress_constraints": 0.002337932586669922, 
  "time_sec_solve": 5.507469177246094e-05, 
  "time_sec_simulate_packet": 0.0004410743713378906, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "(False, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS'))", 
    "(True, (u'./p4src/bng.p4', 763, u'lmeta.if_type == IF_CORE'))", 
    "u'bng613'", 
    "u'IngressPipe.downstream.set_line'", 
    "(True, (u'./p4src/bng.p4', 362, u'hdr.ipv4.isValid()'))", 
    "u'IngressPipe.downstream.cos.set_cos_id'", 
    "u'IngressPipe.downstream.set_pppoe_attachment_v4'", 
    "(True, (u'./p4src/bng.p4', 304, u'hdr.ipv4.isValid()'))", 
    "(True, (u'./p4src/bng.p4', 305, u'hdr.ipv4.ttl > 1'))", 
    "u'bng306_0'", 
    "u'IngressPipe.acl.drop'", 
    "u'IngressPipe.set_accounting_id'", 
    "(True, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 23, 
  "result": "SUCCESS", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'node_10', (False, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS')))", 
    "(u'node_31', (True, (u'./p4src/bng.p4', 763, u'lmeta.if_type == IF_CORE')))", 
    "(u'tbl_bng613', u'bng613')", 
    "(u'IngressPipe.downstream.lines_v4', u'IngressPipe.downstream.set_line')", 
    "(u'node_34', (True, (u'./p4src/bng.p4', 362, u'hdr.ipv4.isValid()')))", 
    "(u'IngressPipe.downstream.cos.services_v4', u'IngressPipe.downstream.cos.set_cos_id')", 
    "(u'IngressPipe.downstream.attachments_v4', u'IngressPipe.downstream.set_pppoe_attachment_v4')", 
    "(u'node_38', (True, (u'./p4src/bng.p4', 304, u'hdr.ipv4.isValid()')))", 
    "(u'node_39', (True, (u'./p4src/bng.p4', 305, u'hdr.ipv4.ttl > 1')))", 
    "(u'tbl_bng306_0', u'bng306_0')", 
    "(u'IngressPipe.acl.acls', u'IngressPipe.acl.drop')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))", 
    "(u'node_47', (True, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM')))", 
    "(u'tbl_bng328', u'bng328')"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [
    "table_add IngressPipe.if_types IngressPipe.set_if_type 0 => 1", 
    "table_add IngressPipe.my_stations IngressPipe.set_my_station 0 0 => ", 
    "table_add IngressPipe.downstream.lines_v4 IngressPipe.downstream.set_line 0 => 0", 
    "table_add IngressPipe.downstream.cos.services_v4 IngressPipe.downstream.cos.set_cos_id 0&&&4294967295 0&&&4294967295 0&&&255 0->0 0->0 => 0 1", 
    "table_add IngressPipe.downstream.attachments_v4 IngressPipe.downstream.set_pppoe_attachment_v4 0 => 0 0 0 0 0", 
    "table_add IngressPipe.acl.acls IngressPipe.acl.drop 0&&&511 1&&&7 0&&&281474976710655 0&&&281474976710655 34916&&&65535 0&&&4294967295 0&&&4294967295 0&&&255 0&&&65535 0&&&65535 =>  1", 
    "table_add IngressPipe.accounting_ids IngressPipe.set_accounting_id 0 0 => 0"
  ], 
  "input_packets": [
    {
      "port": 0, 
      "packet_len_bytes": 50, 
      "packet_hexstr": "0000000000000000000000009100000081000000886300000000000000210000000000000000800000000000000000000000"
    }
  ], 
  "parser_path_len": 7, 
  "ingress_path_len": 22, 
  "time_sec_generate_ingress_constraints": 0.0024170875549316406, 
  "time_sec_solve": 0.0272219181060791, 
  "time_sec_simulate_packet": 0.4198770523071289, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "(False, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS'))", 
    "(True, (u'./p4src/bng.p4', 763, u'lmeta.if_type == IF_CORE'))", 
    "u'bng613'", 
    "u'IngressPipe.downstream.set_line'", 
    "(True, (u'./p4src/bng.p4', 362, u'hdr.ipv4.isValid()'))", 
    "u'IngressPipe.downstream.cos.set_cos_id'", 
    "u'IngressPipe.downstream.set_pppoe_attachment_v4'", 
    "(True, (u'./p4src/bng.p4', 304, u'hdr.ipv4.isValid()'))", 
    "(True, (u'./p4src/bng.p4', 305, u'hdr.ipv4.ttl > 1'))", 
    "u'bng306_0'", 
    "u'IngressPipe.acl.drop'", 
    "u'IngressPipe.set_accounting_id'", 
    "(False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))", 
    "(True, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM'))", 
    "u'bng328'"
  ], 
  "table_setup_cmd_data": [
    {
      "command": "table_add", 
      "table_name": "IngressPipe.if_types", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_if_type", 
      "action_parameters": [
        {
          "name": "if_type", 
          "value": 1
        }
      ]
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.my_stations", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "ethernet.dst_addr", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_my_station", 
      "action_parameters": []
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.downstream.lines_v4", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "ipv4.dst_addr", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.downstream.set_line", 
      "action_parameters": [
        {
          "name": "line_id", 
          "value": 0
        }
      ]
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.downstream.cos.services_v4", 
      "keys": [
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.src_addr", 
          "value": 0, 
          "mask": 4294967295
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.dst_addr", 
          "value": 0, 
          "mask": 4294967295
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.proto", 
          "value": 0, 
          "mask": 255
        }, 
        {
          "match_kind": "range", 
          "key_field_name": "scalars.userMetadata.l4_sport", 
          "min_value": 0, 
          "max_value": 0
        }, 
        {
          "match_kind": "range", 
          "key_field_name": "scalars.userMetadata.l4_dport", 
          "min_value": 0, 
          "max_value": 0
        }
      ], 
      "action_name": "IngressPipe.downstream.cos.set_cos_id", 
      "action_parameters": [
        {
          "name": "cos_id", 
          "value": 0
        }
      ], 
      "priority": 1
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.downstream.attachments_v4", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.line_id", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.downstream.set_pppoe_attachment_v4", 
      "action_parameters": [
        {
          "name": "port", 
          "value": 0
        }, 
        {
          "name": "dmac", 
          "value": 0
        }, 
        {
          "name": "s_tag", 
          "value": 0
        }, 
        {
          "name": "c_tag", 
          "value": 0
        }, 
        {
          "name": "pppoe_sess_id", 
          "value": 0
        }
      ]
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.acl.acls", 
      "keys": [
        {
          "match_kind": "ternary", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0, 
          "mask": 511
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.if_type", 
          "value": 1, 
          "mask": 7
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ethernet.src_addr", 
          "value": 0, 
          "mask": 281474976710655
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ethernet.dst_addr", 
          "value": 0, 
          "mask": 281474976710655
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "eth_type.value", 
          "value": 34916, 
          "mask": 65535
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.src_addr", 
          "value": 0, 
          "mask": 4294967295
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.dst_addr", 
          "value": 0, 
          "mask": 4294967295
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.proto", 
          "value": 0, 
          "mask": 255
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.l4_sport", 
          "value": 0, 
          "mask": 65535
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.l4_dport", 
          "value": 0, 
          "mask": 65535
        }
      ], 
      "action_name": "IngressPipe.acl.drop", 
      "action_parameters": [], 
      "priority": 1
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.accounting_ids", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.line_id", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.cos_id", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_accounting_id", 
      "action_parameters": [
        {
          "name": "accounting_id", 
          "value": 0
        }
      ]
    }
  ]
},
{
  "log_file_id": 24, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'node_10', (False, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS')))", 
    "(u'node_31', (True, (u'./p4src/bng.p4', 763, u'lmeta.if_type == IF_CORE')))", 
    "(u'tbl_bng613', u'bng613')", 
    "(u'IngressPipe.downstream.lines_v4', u'IngressPipe.downstream.set_line')", 
    "(u'node_34', (True, (u'./p4src/bng.p4', 362, u'hdr.ipv4.isValid()')))", 
    "(u'IngressPipe.downstream.cos.services_v4', u'IngressPipe.downstream.cos.set_cos_id')", 
    "(u'IngressPipe.downstream.attachments_v4', u'IngressPipe.downstream.set_pppoe_attachment_v4')", 
    "(u'node_38', (True, (u'./p4src/bng.p4', 304, u'hdr.ipv4.isValid()')))", 
    "(u'node_39', (True, (u'./p4src/bng.p4', 305, u'hdr.ipv4.ttl > 1')))", 
    "(u'tbl_bng306_0', u'bng306_0')", 
    "(u'IngressPipe.acl.acls', u'IngressPipe.acl.drop')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))", 
    "(u'node_47', (False, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM')))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 21, 
  "time_sec_generate_ingress_constraints": 0.0025441646575927734, 
  "time_sec_solve": 6.794929504394531e-05, 
  "time_sec_simulate_packet": 0.00044989585876464844, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "(False, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS'))", 
    "(True, (u'./p4src/bng.p4', 763, u'lmeta.if_type == IF_CORE'))", 
    "u'bng613'", 
    "u'IngressPipe.downstream.set_line'", 
    "(True, (u'./p4src/bng.p4', 362, u'hdr.ipv4.isValid()'))", 
    "u'IngressPipe.downstream.cos.set_cos_id'", 
    "u'IngressPipe.downstream.set_pppoe_attachment_v4'", 
    "(True, (u'./p4src/bng.p4', 304, u'hdr.ipv4.isValid()'))", 
    "(True, (u'./p4src/bng.p4', 305, u'hdr.ipv4.ttl > 1'))", 
    "u'bng306_0'", 
    "u'IngressPipe.acl.drop'", 
    "u'IngressPipe.set_accounting_id'", 
    "(False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))", 
    "(False, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 31, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'node_10', (False, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS')))", 
    "(u'node_31', (True, (u'./p4src/bng.p4', 763, u'lmeta.if_type == IF_CORE')))", 
    "(u'tbl_bng613', u'bng613')", 
    "(u'IngressPipe.downstream.lines_v4', u'IngressPipe.downstream.set_line')", 
    "(u'node_34', (True, (u'./p4src/bng.p4', 362, u'hdr.ipv4.isValid()')))", 
    "(u'IngressPipe.downstream.cos.services_v4', u'IngressPipe.downstream.cos.set_cos_id')", 
    "(u'IngressPipe.downstream.attachments_v4', u'IngressPipe.downstream.set_pppoe_attachment_v4')", 
    "(u'node_38', (False, (u'./p4src/bng.p4', 304, u'hdr.ipv4.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 15, 
  "time_sec_generate_ingress_constraints": 0.0021810531616210938, 
  "time_sec_solve": 4.482269287109375e-05, 
  "time_sec_simulate_packet": 0.0002701282501220703, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "(False, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS'))", 
    "(True, (u'./p4src/bng.p4', 763, u'lmeta.if_type == IF_CORE'))", 
    "u'bng613'", 
    "u'IngressPipe.downstream.set_line'", 
    "(True, (u'./p4src/bng.p4', 362, u'hdr.ipv4.isValid()'))", 
    "u'IngressPipe.downstream.cos.set_cos_id'", 
    "u'IngressPipe.downstream.set_pppoe_attachment_v4'", 
    "(False, (u'./p4src/bng.p4', 304, u'hdr.ipv4.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 35, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'node_10', (False, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS')))", 
    "(u'node_31', (True, (u'./p4src/bng.p4', 763, u'lmeta.if_type == IF_CORE')))", 
    "(u'tbl_bng613', u'bng613')", 
    "(u'IngressPipe.downstream.lines_v4', u'IngressPipe.downstream.set_line')", 
    "(u'node_34', (False, (u'./p4src/bng.p4', 362, u'hdr.ipv4.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 12, 
  "time_sec_generate_ingress_constraints": 0.0020759105682373047, 
  "time_sec_solve": 4.291534423828125e-05, 
  "time_sec_simulate_packet": 0.00023412704467773438, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "(False, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS'))", 
    "(True, (u'./p4src/bng.p4', 763, u'lmeta.if_type == IF_CORE'))", 
    "u'bng613'", 
    "u'IngressPipe.downstream.set_line'", 
    "(False, (u'./p4src/bng.p4', 362, u'hdr.ipv4.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 40, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 7, 
  "time_sec_generate_ingress_constraints": 0.0016908645629882812, 
  "time_sec_solve": 3.719329833984375e-05, 
  "time_sec_simulate_packet": 0.00015401840209960938, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 44, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (False, None))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 3, 
  "time_sec_generate_ingress_constraints": 0.0018320083618164062, 
  "time_sec_solve": 3.695487976074219e-05, 
  "time_sec_simulate_packet": 0.0001361370086669922, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(False, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 45, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 2, 
  "time_sec_generate_ingress_constraints": 0.0021691322326660156, 
  "time_sec_solve": 4.982948303222656e-05, 
  "time_sec_simulate_packet": 0.0001990795135498047, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 4, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'tbl_bng749', u'bng749')", 
    "(u'node_5', (True, None))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 6, 
  "ingress_path_len": 4, 
  "time_sec_generate_ingress_constraints": 0.0016460418701171875, 
  "time_sec_solve": 4.410743713378906e-05, 
  "time_sec_simulate_packet": 0.00014781951904296875, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "u'bng749'", 
    "(True, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 5, 
  "result": "SUCCESS", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'tbl_bng749', u'bng749')", 
    "(u'node_5', (False, None))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [
    {
      "port": 0, 
      "packet_len_bytes": 28, 
      "packet_hexstr": "00000000000000000000000000008100000088640000000000000000"
    }
  ], 
  "parser_path_len": 6, 
  "ingress_path_len": 4, 
  "time_sec_generate_ingress_constraints": 0.0016031265258789062, 
  "time_sec_solve": 0.0098419189453125, 
  "time_sec_simulate_packet": 0.03682994842529297, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "u'bng749'", 
    "(False, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 6, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 6, 
  "ingress_path_len": 2, 
  "time_sec_generate_ingress_constraints": 0.002357006072998047, 
  "time_sec_solve": 5.0067901611328125e-05, 
  "time_sec_simulate_packet": 0.00020503997802734375, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 10, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'nop')", 
    "(u'node_9', (False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'IngressPipe.acl.acls', u'nop')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (True, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 10, 
  "time_sec_generate_ingress_constraints": 0.0030629634857177734, 
  "time_sec_solve": 5.1021575927734375e-05, 
  "time_sec_simulate_packet": 0.00031304359436035156, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'nop'", 
    "(False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "u'nop'", 
    "u'IngressPipe.set_accounting_id'", 
    "(True, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 12, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'nop')", 
    "(u'node_9', (False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'IngressPipe.acl.acls', u'nop')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))", 
    "(u'node_47', (True, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 11, 
  "time_sec_generate_ingress_constraints": 0.0026760101318359375, 
  "time_sec_solve": 7.796287536621094e-05, 
  "time_sec_simulate_packet": 0.0002090930938720703, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'nop'", 
    "(False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "u'nop'", 
    "u'IngressPipe.set_accounting_id'", 
    "(False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))", 
    "(True, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 13, 
  "result": "SUCCESS", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'nop')", 
    "(u'node_9', (False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'IngressPipe.acl.acls', u'nop')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))", 
    "(u'node_47', (False, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM')))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [
    "table_add IngressPipe.if_types IngressPipe.set_if_type 0 => 0", 
    "table_add IngressPipe.my_stations nop 0 0 => ", 
    "table_add IngressPipe.acl.acls nop 0&&&511 0&&&7 0&&&281474976710655 0&&&281474976710655 0&&&65535 0&&&4294967295 0&&&4294967295 0&&&255 0&&&65535 0&&&65535 =>  1", 
    "table_add IngressPipe.accounting_ids IngressPipe.set_accounting_id 0 0 => 0"
  ], 
  "input_packets": [
    {
      "port": 0, 
      "packet_len_bytes": 14, 
      "packet_hexstr": "0000000000000000000000000000"
    }
  ], 
  "parser_path_len": 3, 
  "ingress_path_len": 11, 
  "time_sec_generate_ingress_constraints": 0.001708984375, 
  "time_sec_solve": 0.012577056884765625, 
  "time_sec_simulate_packet": 0.0779719352722168, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'nop'", 
    "(False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "u'nop'", 
    "u'IngressPipe.set_accounting_id'", 
    "(False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))", 
    "(False, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM'))"
  ], 
  "table_setup_cmd_data": [
    {
      "command": "table_add", 
      "table_name": "IngressPipe.if_types", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_if_type", 
      "action_parameters": [
        {
          "name": "if_type", 
          "value": 0
        }
      ]
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.my_stations", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "ethernet.dst_addr", 
          "value": 0
        }
      ], 
      "action_name": "nop", 
      "action_parameters": []
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.acl.acls", 
      "keys": [
        {
          "match_kind": "ternary", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0, 
          "mask": 511
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.if_type", 
          "value": 0, 
          "mask": 7
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ethernet.src_addr", 
          "value": 0, 
          "mask": 281474976710655
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ethernet.dst_addr", 
          "value": 0, 
          "mask": 281474976710655
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "eth_type.value", 
          "value": 0, 
          "mask": 65535
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.src_addr", 
          "value": 0, 
          "mask": 4294967295
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.dst_addr", 
          "value": 0, 
          "mask": 4294967295
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.proto", 
          "value": 0, 
          "mask": 255
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.l4_sport", 
          "value": 0, 
          "mask": 65535
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.l4_dport", 
          "value": 0, 
          "mask": 65535
        }
      ], 
      "action_name": "nop", 
      "action_parameters": [], 
      "priority": 1
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.accounting_ids", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.line_id", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.cos_id", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_accounting_id", 
      "action_parameters": [
        {
          "name": "accounting_id", 
          "value": 0
        }
      ]
    }
  ]
},
{
  "log_file_id": 19, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'nop')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 7, 
  "time_sec_generate_ingress_constraints": 0.0019490718841552734, 
  "time_sec_solve": 4.00543212890625e-05, 
  "time_sec_simulate_packet": 0.00017690658569335938, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'nop'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 23, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (False, None))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 3, 
  "time_sec_generate_ingress_constraints": 0.001986980438232422, 
  "time_sec_solve": 3.886222839355469e-05, 
  "time_sec_simulate_packet": 0.00015211105346679688, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(False, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 24, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 2, 
  "time_sec_generate_ingress_constraints": 0.0018868446350097656, 
  "time_sec_solve": 3.719329833984375e-05, 
  "time_sec_simulate_packet": 0.00014901161193847656, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 4, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_ipv4", 
    "parse_tcp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'tbl_bng749', u'bng749')", 
    "(u'node_5', (True, None))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 8, 
  "ingress_path_len": 4, 
  "time_sec_generate_ingress_constraints": 0.0023109912872314453, 
  "time_sec_solve": 4.506111145019531e-05, 
  "time_sec_simulate_packet": 0.00022602081298828125, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_ipv4", 
    "parse_ipv4 -> parse_tcp", 
    "parse_tcp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "u'bng749'", 
    "(True, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 5, 
  "result": "SUCCESS", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_ipv4", 
    "parse_tcp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'tbl_bng749', u'bng749')", 
    "(u'node_5', (False, None))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [
    {
      "port": 0, 
      "packet_len_bytes": 64, 
      "packet_hexstr": "000000000000000000000000000088a8000081000000080000000000000000000006000000000000000000000000000000000000000000000000000000000000"
    }
  ], 
  "parser_path_len": 8, 
  "ingress_path_len": 4, 
  "time_sec_generate_ingress_constraints": 0.002267122268676758, 
  "time_sec_solve": 0.016015052795410156, 
  "time_sec_simulate_packet": 0.08068084716796875, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_ipv4", 
    "parse_ipv4 -> parse_tcp", 
    "parse_tcp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "u'bng749'", 
    "(False, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 6, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_ipv4", 
    "parse_tcp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 8, 
  "ingress_path_len": 2, 
  "time_sec_generate_ingress_constraints": 0.0027289390563964844, 
  "time_sec_solve": 5.793571472167969e-05, 
  "time_sec_simulate_packet": 0.0002410411834716797, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_ipv4", 
    "parse_ipv4 -> parse_tcp", 
    "parse_tcp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 17, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "parse_udp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'node_10', (True, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS')))", 
    "(u'tbl_bng761', u'bng761')", 
    "(u'IngressPipe.upstream.lines', u'IngressPipe.upstream.set_line')", 
    "(u'tbl_bng499', u'bng499')", 
    "(u'IngressPipe.upstream.pppoe_punts', u'nop')", 
    "(u'node_15', (True, (u'./p4src/bng.p4', 501, u'!(lmeta.punted)')))", 
    "(u'node_16', (True, (u'./p4src/bng.p4', 502, u'lmeta.line_id == LINE_UNKNOWN')))", 
    "(u'tbl_will_drop', u'will_drop')", 
    "(u'tbl_bng504', u'bng504')", 
    "(u'node_19', (True, None))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 17, 
  "time_sec_generate_ingress_constraints": 0.002341032028198242, 
  "time_sec_solve": 4.506111145019531e-05, 
  "time_sec_simulate_packet": 0.0002689361572265625, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> parse_udp", 
    "parse_udp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "(True, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS'))", 
    "u'bng761'", 
    "u'IngressPipe.upstream.set_line'", 
    "u'bng499'", 
    "u'nop'", 
    "(True, (u'./p4src/bng.p4', 501, u'!(lmeta.punted)'))", 
    "(True, (u'./p4src/bng.p4', 502, u'lmeta.line_id == LINE_UNKNOWN'))", 
    "u'will_drop'", 
    "u'bng504'", 
    "(True, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 22, 
  "result": "SUCCESS", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "parse_udp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'node_10', (True, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS')))", 
    "(u'tbl_bng761', u'bng761')", 
    "(u'IngressPipe.upstream.lines', u'IngressPipe.upstream.set_line')", 
    "(u'tbl_bng499', u'bng499')", 
    "(u'IngressPipe.upstream.pppoe_punts', u'nop')", 
    "(u'node_15', (True, (u'./p4src/bng.p4', 501, u'!(lmeta.punted)')))", 
    "(u'node_16', (True, (u'./p4src/bng.p4', 502, u'lmeta.line_id == LINE_UNKNOWN')))", 
    "(u'tbl_will_drop', u'will_drop')", 
    "(u'tbl_bng504', u'bng504')", 
    "(u'node_19', (False, None))", 
    "(u'IngressPipe.acl.acls', u'IngressPipe.acl.set_port')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (True, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))", 
    "(u'tbl_bng326', u'bng326')"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [
    "table_add IngressPipe.if_types IngressPipe.set_if_type 0 => 2", 
    "table_add IngressPipe.my_stations IngressPipe.set_my_station 0 0 => ", 
    "table_add IngressPipe.upstream.lines IngressPipe.upstream.set_line 0 0 0 => 0", 
    "table_add IngressPipe.upstream.pppoe_punts nop 0 33&&&65535 =>  1", 
    "table_add IngressPipe.acl.acls IngressPipe.acl.set_port 0&&&511 2&&&7 0&&&281474976710655 0&&&281474976710655 34915&&&65535 0&&&4294967295 0&&&4294967295 17&&&255 0&&&65535 0&&&65535 => 0 1", 
    "table_add IngressPipe.accounting_ids IngressPipe.set_accounting_id 0 0 => 0"
  ], 
  "input_packets": [
    {
      "port": 0, 
      "packet_len_bytes": 54, 
      "packet_hexstr": "000000000000000000000000910000008863000000000000002100000000000000000011000000000000000000000000000000000000"
    }
  ], 
  "parser_path_len": 7, 
  "ingress_path_len": 21, 
  "time_sec_generate_ingress_constraints": 0.0017540454864501953, 
  "time_sec_solve": 0.02250194549560547, 
  "time_sec_simulate_packet": 0.3921210765838623, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> parse_udp", 
    "parse_udp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "(True, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS'))", 
    "u'bng761'", 
    "u'IngressPipe.upstream.set_line'", 
    "u'bng499'", 
    "u'nop'", 
    "(True, (u'./p4src/bng.p4', 501, u'!(lmeta.punted)'))", 
    "(True, (u'./p4src/bng.p4', 502, u'lmeta.line_id == LINE_UNKNOWN'))", 
    "u'will_drop'", 
    "u'bng504'", 
    "(False, None)", 
    "u'IngressPipe.acl.set_port'", 
    "u'IngressPipe.set_accounting_id'", 
    "(True, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))", 
    "u'bng326'"
  ], 
  "table_setup_cmd_data": [
    {
      "command": "table_add", 
      "table_name": "IngressPipe.if_types", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_if_type", 
      "action_parameters": [
        {
          "name": "if_type", 
          "value": 2
        }
      ]
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.my_stations", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "ethernet.dst_addr", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_my_station", 
      "action_parameters": []
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.upstream.lines", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.c_tag", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.s_tag", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.upstream.set_line", 
      "action_parameters": [
        {
          "name": "line_id", 
          "value": 0
        }
      ]
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.upstream.pppoe_punts", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "pppoe.code", 
          "value": 0
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "pppoe.proto", 
          "value": 33, 
          "mask": 65535
        }
      ], 
      "action_name": "nop", 
      "action_parameters": [], 
      "priority": 1
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.acl.acls", 
      "keys": [
        {
          "match_kind": "ternary", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0, 
          "mask": 511
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.if_type", 
          "value": 2, 
          "mask": 7
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ethernet.src_addr", 
          "value": 0, 
          "mask": 281474976710655
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ethernet.dst_addr", 
          "value": 0, 
          "mask": 281474976710655
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "eth_type.value", 
          "value": 34915, 
          "mask": 65535
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.src_addr", 
          "value": 0, 
          "mask": 4294967295
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.dst_addr", 
          "value": 0, 
          "mask": 4294967295
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.proto", 
          "value": 17, 
          "mask": 255
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.l4_sport", 
          "value": 0, 
          "mask": 65535
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.l4_dport", 
          "value": 0, 
          "mask": 65535
        }
      ], 
      "action_name": "IngressPipe.acl.set_port", 
      "action_parameters": [
        {
          "name": "port", 
          "value": 0
        }
      ], 
      "priority": 1
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.accounting_ids", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.line_id", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.cos_id", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_accounting_id", 
      "action_parameters": [
        {
          "name": "accounting_id", 
          "value": 0
        }
      ]
    }
  ]
},
{
  "log_file_id": 23, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "parse_udp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'node_10', (True, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS')))", 
    "(u'tbl_bng761', u'bng761')", 
    "(u'IngressPipe.upstream.lines', u'IngressPipe.upstream.set_line')", 
    "(u'tbl_bng499', u'bng499')", 
    "(u'IngressPipe.upstream.pppoe_punts', u'nop')", 
    "(u'node_15', (True, (u'./p4src/bng.p4', 501, u'!(lmeta.punted)')))", 
    "(u'node_16', (True, (u'./p4src/bng.p4', 502, u'lmeta.line_id == LINE_UNKNOWN')))", 
    "(u'tbl_will_drop', u'will_drop')", 
    "(u'tbl_bng504', u'bng504')", 
    "(u'node_19', (False, None))", 
    "(u'IngressPipe.acl.acls', u'IngressPipe.acl.set_port')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 20, 
  "time_sec_generate_ingress_constraints": 0.0018699169158935547, 
  "time_sec_solve": 3.910064697265625e-05, 
  "time_sec_simulate_packet": 0.0002429485321044922, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> parse_udp", 
    "parse_udp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "(True, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS'))", 
    "u'bng761'", 
    "u'IngressPipe.upstream.set_line'", 
    "u'bng499'", 
    "u'nop'", 
    "(True, (u'./p4src/bng.p4', 501, u'!(lmeta.punted)'))", 
    "(True, (u'./p4src/bng.p4', 502, u'lmeta.line_id == LINE_UNKNOWN'))", 
    "u'will_drop'", 
    "u'bng504'", 
    "(False, None)", 
    "u'IngressPipe.acl.set_port'", 
    "u'IngressPipe.set_accounting_id'", 
    "(False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 30, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "parse_udp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'node_10', (True, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS')))", 
    "(u'tbl_bng761', u'bng761')", 
    "(u'IngressPipe.upstream.lines', u'IngressPipe.upstream.set_line')", 
    "(u'tbl_bng499', u'bng499')", 
    "(u'IngressPipe.upstream.pppoe_punts', u'nop')", 
    "(u'node_15', (False, (u'./p4src/bng.p4', 501, u'!(lmeta.punted)')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 13, 
  "time_sec_generate_ingress_constraints": 0.0020270347595214844, 
  "time_sec_solve": 3.695487976074219e-05, 
  "time_sec_simulate_packet": 0.00019097328186035156, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> parse_udp", 
    "parse_udp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "(True, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS'))", 
    "u'bng761'", 
    "u'IngressPipe.upstream.set_line'", 
    "u'bng499'", 
    "u'nop'", 
    "(False, (u'./p4src/bng.p4', 501, u'!(lmeta.punted)'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 35, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "parse_udp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 7, 
  "time_sec_generate_ingress_constraints": 0.0017209053039550781, 
  "time_sec_solve": 4.506111145019531e-05, 
  "time_sec_simulate_packet": 0.00017905235290527344, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> parse_udp", 
    "parse_udp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 39, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "parse_udp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (False, None))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 3, 
  "time_sec_generate_ingress_constraints": 0.0016431808471679688, 
  "time_sec_solve": 2.8848648071289062e-05, 
  "time_sec_simulate_packet": 0.0001251697540283203, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> parse_udp", 
    "parse_udp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(False, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 40, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "parse_udp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 2, 
  "time_sec_generate_ingress_constraints": 0.001483917236328125, 
  "time_sec_solve": 2.6226043701171875e-05, 
  "time_sec_simulate_packet": 0.00011396408081054688, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> parse_udp", 
    "parse_udp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 4, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'tbl_bng749', u'bng749')", 
    "(u'node_5', (True, None))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 4, 
  "time_sec_generate_ingress_constraints": 0.0016510486602783203, 
  "time_sec_solve": 3.1948089599609375e-05, 
  "time_sec_simulate_packet": 0.00012803077697753906, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "u'bng749'", 
    "(True, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 5, 
  "result": "SUCCESS", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'tbl_bng749', u'bng749')", 
    "(u'node_5', (False, None))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [
    {
      "port": 0, 
      "packet_len_bytes": 32, 
      "packet_hexstr": "0000000000000000000000000000810000008100000088640000000000000000"
    }
  ], 
  "parser_path_len": 7, 
  "ingress_path_len": 4, 
  "time_sec_generate_ingress_constraints": 0.001619100570678711, 
  "time_sec_solve": 0.009562969207763672, 
  "time_sec_simulate_packet": 0.033371925354003906, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "u'bng749'", 
    "(False, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 6, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 2, 
  "time_sec_generate_ingress_constraints": 0.0014791488647460938, 
  "time_sec_solve": 3.504753112792969e-05, 
  "time_sec_simulate_packet": 0.00011301040649414062, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 10, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'nop')", 
    "(u'node_9', (False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'IngressPipe.acl.acls', u'IngressPipe.acl.punt')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (True, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 10, 
  "time_sec_generate_ingress_constraints": 0.001397848129272461, 
  "time_sec_solve": 4.100799560546875e-05, 
  "time_sec_simulate_packet": 0.0001499652862548828, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'nop'", 
    "(False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "u'IngressPipe.acl.punt'", 
    "u'IngressPipe.set_accounting_id'", 
    "(True, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 12, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'nop')", 
    "(u'node_9', (False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'IngressPipe.acl.acls', u'IngressPipe.acl.punt')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))", 
    "(u'node_47', (True, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 11, 
  "time_sec_generate_ingress_constraints": 0.0014541149139404297, 
  "time_sec_solve": 3.2901763916015625e-05, 
  "time_sec_simulate_packet": 0.00016999244689941406, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'nop'", 
    "(False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "u'IngressPipe.acl.punt'", 
    "u'IngressPipe.set_accounting_id'", 
    "(False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))", 
    "(True, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 13, 
  "result": "SUCCESS", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'nop')", 
    "(u'node_9', (False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'IngressPipe.acl.acls', u'IngressPipe.acl.punt')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))", 
    "(u'node_47', (False, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM')))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [
    "table_add IngressPipe.if_types IngressPipe.set_if_type 0 => 0", 
    "table_add IngressPipe.my_stations nop 0 0 => ", 
    "table_add IngressPipe.acl.acls IngressPipe.acl.punt 0&&&511 0&&&7 0&&&281474976710655 0&&&281474976710655 0&&&65535 0&&&4294967295 0&&&4294967295 0&&&255 0&&&65535 0&&&65535 =>  1", 
    "table_add IngressPipe.accounting_ids IngressPipe.set_accounting_id 0 0 => 0"
  ], 
  "input_packets": [
    {
      "port": 0, 
      "packet_len_bytes": 14, 
      "packet_hexstr": "0000000000000000000000000000"
    }
  ], 
  "parser_path_len": 3, 
  "ingress_path_len": 11, 
  "time_sec_generate_ingress_constraints": 0.0019071102142333984, 
  "time_sec_solve": 0.009099006652832031, 
  "time_sec_simulate_packet": 0.04976296424865723, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'nop'", 
    "(False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "u'IngressPipe.acl.punt'", 
    "u'IngressPipe.set_accounting_id'", 
    "(False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))", 
    "(False, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM'))"
  ], 
  "table_setup_cmd_data": [
    {
      "command": "table_add", 
      "table_name": "IngressPipe.if_types", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_if_type", 
      "action_parameters": [
        {
          "name": "if_type", 
          "value": 0
        }
      ]
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.my_stations", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "ethernet.dst_addr", 
          "value": 0
        }
      ], 
      "action_name": "nop", 
      "action_parameters": []
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.acl.acls", 
      "keys": [
        {
          "match_kind": "ternary", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0, 
          "mask": 511
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.if_type", 
          "value": 0, 
          "mask": 7
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ethernet.src_addr", 
          "value": 0, 
          "mask": 281474976710655
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ethernet.dst_addr", 
          "value": 0, 
          "mask": 281474976710655
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "eth_type.value", 
          "value": 0, 
          "mask": 65535
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.src_addr", 
          "value": 0, 
          "mask": 4294967295
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.dst_addr", 
          "value": 0, 
          "mask": 4294967295
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.proto", 
          "value": 0, 
          "mask": 255
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.l4_sport", 
          "value": 0, 
          "mask": 65535
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.l4_dport", 
          "value": 0, 
          "mask": 65535
        }
      ], 
      "action_name": "IngressPipe.acl.punt", 
      "action_parameters": [], 
      "priority": 1
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.accounting_ids", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.line_id", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.cos_id", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_accounting_id", 
      "action_parameters": [
        {
          "name": "accounting_id", 
          "value": 0
        }
      ]
    }
  ]
},
{
  "log_file_id": 19, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'nop')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 7, 
  "time_sec_generate_ingress_constraints": 0.001986980438232422, 
  "time_sec_solve": 0.00010395050048828125, 
  "time_sec_simulate_packet": 0.00019407272338867188, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'nop'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 23, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (False, None))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 3, 
  "time_sec_generate_ingress_constraints": 0.0020189285278320312, 
  "time_sec_solve": 4.315376281738281e-05, 
  "time_sec_simulate_packet": 0.00015687942504882812, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(False, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 24, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 2, 
  "time_sec_generate_ingress_constraints": 0.0019290447235107422, 
  "time_sec_solve": 3.790855407714844e-05, 
  "time_sec_simulate_packet": 0.00014495849609375, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 4, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_ipv4", 
    "parse_icmp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'tbl_bng749', u'bng749')", 
    "(u'node_5', (True, None))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 4, 
  "time_sec_generate_ingress_constraints": 0.0017609596252441406, 
  "time_sec_solve": 4.601478576660156e-05, 
  "time_sec_simulate_packet": 0.00015497207641601562, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_ipv4", 
    "parse_ipv4 -> parse_icmp", 
    "parse_icmp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "u'bng749'", 
    "(True, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 5, 
  "result": "SUCCESS", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_ipv4", 
    "parse_icmp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'tbl_bng749', u'bng749')", 
    "(u'node_5', (False, None))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [
    {
      "port": 0, 
      "packet_len_bytes": 56, 
      "packet_hexstr": "000000000000000000000000000088a800000800000000000000000000010000000000000000000000000000000000000000000000000000"
    }
  ], 
  "parser_path_len": 7, 
  "ingress_path_len": 4, 
  "time_sec_generate_ingress_constraints": 0.0021240711212158203, 
  "time_sec_solve": 0.012485980987548828, 
  "time_sec_simulate_packet": 0.046278953552246094, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_ipv4", 
    "parse_ipv4 -> parse_icmp", 
    "parse_icmp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "u'bng749'", 
    "(False, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 6, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_ipv4", 
    "parse_icmp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 2, 
  "time_sec_generate_ingress_constraints": 0.0016770362854003906, 
  "time_sec_solve": 3.790855407714844e-05, 
  "time_sec_simulate_packet": 0.0001289844512939453, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_ipv4", 
    "parse_ipv4 -> parse_icmp", 
    "parse_icmp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 12, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'node_10', (False, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS')))", 
    "(u'node_31', (False, (u'./p4src/bng.p4', 763, u'lmeta.if_type == IF_CORE')))", 
    "(u'IngressPipe.acl.acls', u'IngressPipe.acl.drop')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (True, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 12, 
  "time_sec_generate_ingress_constraints": 0.0015099048614501953, 
  "time_sec_solve": 7.796287536621094e-05, 
  "time_sec_simulate_packet": 0.00017309188842773438, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "(False, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS'))", 
    "(False, (u'./p4src/bng.p4', 763, u'lmeta.if_type == IF_CORE'))", 
    "u'IngressPipe.acl.drop'", 
    "u'IngressPipe.set_accounting_id'", 
    "(True, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 14, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'node_10', (False, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS')))", 
    "(u'node_31', (False, (u'./p4src/bng.p4', 763, u'lmeta.if_type == IF_CORE')))", 
    "(u'IngressPipe.acl.acls', u'IngressPipe.acl.drop')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))", 
    "(u'node_47', (True, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 13, 
  "time_sec_generate_ingress_constraints": 0.0014619827270507812, 
  "time_sec_solve": 2.7894973754882812e-05, 
  "time_sec_simulate_packet": 0.00017309188842773438, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "(False, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS'))", 
    "(False, (u'./p4src/bng.p4', 763, u'lmeta.if_type == IF_CORE'))", 
    "u'IngressPipe.acl.drop'", 
    "u'IngressPipe.set_accounting_id'", 
    "(False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))", 
    "(True, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 15, 
  "result": "SUCCESS", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'node_10', (False, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS')))", 
    "(u'node_31', (False, (u'./p4src/bng.p4', 763, u'lmeta.if_type == IF_CORE')))", 
    "(u'IngressPipe.acl.acls', u'IngressPipe.acl.drop')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))", 
    "(u'node_47', (False, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM')))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [
    "table_add IngressPipe.if_types IngressPipe.set_if_type 0 => 0", 
    "table_add IngressPipe.my_stations IngressPipe.set_my_station 0 0 => ", 
    "table_add IngressPipe.acl.acls IngressPipe.acl.drop 0&&&511 0&&&7 0&&&281474976710655 0&&&281474976710655 34915&&&65535 0&&&4294967295 0&&&4294967295 0&&&255 0&&&65535 0&&&65535 =>  1", 
    "table_add IngressPipe.accounting_ids IngressPipe.set_accounting_id 0 0 => 0"
  ], 
  "input_packets": [
    {
      "port": 0, 
      "packet_len_bytes": 50, 
      "packet_hexstr": "0000000000000000000000009100000081000000886300000000000000210000000000000000000000000000000000000000"
    }
  ], 
  "parser_path_len": 7, 
  "ingress_path_len": 13, 
  "time_sec_generate_ingress_constraints": 0.0014710426330566406, 
  "time_sec_solve": 0.012951850891113281, 
  "time_sec_simulate_packet": 0.15217995643615723, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "(False, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS'))", 
    "(False, (u'./p4src/bng.p4', 763, u'lmeta.if_type == IF_CORE'))", 
    "u'IngressPipe.acl.drop'", 
    "u'IngressPipe.set_accounting_id'", 
    "(False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))", 
    "(False, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM'))"
  ], 
  "table_setup_cmd_data": [
    {
      "command": "table_add", 
      "table_name": "IngressPipe.if_types", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_if_type", 
      "action_parameters": [
        {
          "name": "if_type", 
          "value": 0
        }
      ]
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.my_stations", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "ethernet.dst_addr", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_my_station", 
      "action_parameters": []
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.acl.acls", 
      "keys": [
        {
          "match_kind": "ternary", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0, 
          "mask": 511
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.if_type", 
          "value": 0, 
          "mask": 7
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ethernet.src_addr", 
          "value": 0, 
          "mask": 281474976710655
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ethernet.dst_addr", 
          "value": 0, 
          "mask": 281474976710655
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "eth_type.value", 
          "value": 34915, 
          "mask": 65535
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.src_addr", 
          "value": 0, 
          "mask": 4294967295
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.dst_addr", 
          "value": 0, 
          "mask": 4294967295
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.proto", 
          "value": 0, 
          "mask": 255
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.l4_sport", 
          "value": 0, 
          "mask": 65535
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.l4_dport", 
          "value": 0, 
          "mask": 65535
        }
      ], 
      "action_name": "IngressPipe.acl.drop", 
      "action_parameters": [], 
      "priority": 1
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.accounting_ids", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.line_id", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.cos_id", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_accounting_id", 
      "action_parameters": [
        {
          "name": "accounting_id", 
          "value": 0
        }
      ]
    }
  ]
},
{
  "log_file_id": 23, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 7, 
  "time_sec_generate_ingress_constraints": 0.0014569759368896484, 
  "time_sec_solve": 3.1948089599609375e-05, 
  "time_sec_simulate_packet": 0.0001289844512939453, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 27, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (False, None))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 3, 
  "time_sec_generate_ingress_constraints": 0.001508951187133789, 
  "time_sec_solve": 3.314018249511719e-05, 
  "time_sec_simulate_packet": 0.00012183189392089844, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(False, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 28, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 2, 
  "time_sec_generate_ingress_constraints": 0.0014729499816894531, 
  "time_sec_solve": 2.5987625122070312e-05, 
  "time_sec_simulate_packet": 0.00011205673217773438, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 4, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'tbl_bng749', u'bng749')", 
    "(u'node_5', (True, None))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 6, 
  "ingress_path_len": 4, 
  "time_sec_generate_ingress_constraints": 0.0015430450439453125, 
  "time_sec_solve": 3.0994415283203125e-05, 
  "time_sec_simulate_packet": 0.00011992454528808594, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "u'bng749'", 
    "(True, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 5, 
  "result": "SUCCESS", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'tbl_bng749', u'bng749')", 
    "(u'node_5', (False, None))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [
    {
      "port": 0, 
      "packet_len_bytes": 28, 
      "packet_hexstr": "00000000000000000000000000008100000088640000000000000000"
    }
  ], 
  "parser_path_len": 6, 
  "ingress_path_len": 4, 
  "time_sec_generate_ingress_constraints": 0.0014569759368896484, 
  "time_sec_solve": 0.009122133255004883, 
  "time_sec_simulate_packet": 0.03046584129333496, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "u'bng749'", 
    "(False, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 6, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 6, 
  "ingress_path_len": 2, 
  "time_sec_generate_ingress_constraints": 0.0014300346374511719, 
  "time_sec_solve": 3.0040740966796875e-05, 
  "time_sec_simulate_packet": 0.00011086463928222656, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 10, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'nop')", 
    "(u'node_9', (False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'IngressPipe.acl.acls', u'nop')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (True, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 10, 
  "time_sec_generate_ingress_constraints": 0.0012950897216796875, 
  "time_sec_solve": 2.8848648071289062e-05, 
  "time_sec_simulate_packet": 0.00013899803161621094, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'nop'", 
    "(False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "u'nop'", 
    "u'IngressPipe.set_accounting_id'", 
    "(True, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 12, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'nop')", 
    "(u'node_9', (False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'IngressPipe.acl.acls', u'nop')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))", 
    "(u'node_47', (True, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 11, 
  "time_sec_generate_ingress_constraints": 0.0012879371643066406, 
  "time_sec_solve": 2.5033950805664062e-05, 
  "time_sec_simulate_packet": 0.0001418590545654297, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'nop'", 
    "(False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "u'nop'", 
    "u'IngressPipe.set_accounting_id'", 
    "(False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))", 
    "(True, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 13, 
  "result": "SUCCESS", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'nop')", 
    "(u'node_9', (False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'IngressPipe.acl.acls', u'nop')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))", 
    "(u'node_47', (False, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM')))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [
    "table_add IngressPipe.if_types IngressPipe.set_if_type 0 => 0", 
    "table_add IngressPipe.my_stations nop 0 0 => ", 
    "table_add IngressPipe.acl.acls nop 0&&&511 0&&&7 0&&&281474976710655 0&&&281474976710655 0&&&65535 0&&&4294967295 0&&&4294967295 0&&&255 0&&&65535 0&&&65535 =>  1", 
    "table_add IngressPipe.accounting_ids IngressPipe.set_accounting_id 0 0 => 0"
  ], 
  "input_packets": [
    {
      "port": 0, 
      "packet_len_bytes": 14, 
      "packet_hexstr": "0000000000000000000000000000"
    }
  ], 
  "parser_path_len": 3, 
  "ingress_path_len": 11, 
  "time_sec_generate_ingress_constraints": 0.0019109249114990234, 
  "time_sec_solve": 0.008934974670410156, 
  "time_sec_simulate_packet": 0.04632711410522461, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'nop'", 
    "(False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "u'nop'", 
    "u'IngressPipe.set_accounting_id'", 
    "(False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))", 
    "(False, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM'))"
  ], 
  "table_setup_cmd_data": [
    {
      "command": "table_add", 
      "table_name": "IngressPipe.if_types", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_if_type", 
      "action_parameters": [
        {
          "name": "if_type", 
          "value": 0
        }
      ]
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.my_stations", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "ethernet.dst_addr", 
          "value": 0
        }
      ], 
      "action_name": "nop", 
      "action_parameters": []
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.acl.acls", 
      "keys": [
        {
          "match_kind": "ternary", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0, 
          "mask": 511
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.if_type", 
          "value": 0, 
          "mask": 7
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ethernet.src_addr", 
          "value": 0, 
          "mask": 281474976710655
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ethernet.dst_addr", 
          "value": 0, 
          "mask": 281474976710655
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "eth_type.value", 
          "value": 0, 
          "mask": 65535
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.src_addr", 
          "value": 0, 
          "mask": 4294967295
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.dst_addr", 
          "value": 0, 
          "mask": 4294967295
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.proto", 
          "value": 0, 
          "mask": 255
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.l4_sport", 
          "value": 0, 
          "mask": 65535
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.l4_dport", 
          "value": 0, 
          "mask": 65535
        }
      ], 
      "action_name": "nop", 
      "action_parameters": [], 
      "priority": 1
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.accounting_ids", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.line_id", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.cos_id", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_accounting_id", 
      "action_parameters": [
        {
          "name": "accounting_id", 
          "value": 0
        }
      ]
    }
  ]
},
{
  "log_file_id": 19, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'nop')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 7, 
  "time_sec_generate_ingress_constraints": 0.0013740062713623047, 
  "time_sec_solve": 2.7894973754882812e-05, 
  "time_sec_simulate_packet": 0.00012302398681640625, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'nop'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 23, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (False, None))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 3, 
  "time_sec_generate_ingress_constraints": 0.0013630390167236328, 
  "time_sec_solve": 2.5033950805664062e-05, 
  "time_sec_simulate_packet": 0.00010085105895996094, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(False, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 24, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 2, 
  "time_sec_generate_ingress_constraints": 0.0013129711151123047, 
  "time_sec_solve": 2.2172927856445312e-05, 
  "time_sec_simulate_packet": 0.00010085105895996094, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 4, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_ipv4", 
    "parse_tcp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'tbl_bng749', u'bng749')", 
    "(u'node_5', (True, None))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 8, 
  "ingress_path_len": 4, 
  "time_sec_generate_ingress_constraints": 0.001505136489868164, 
  "time_sec_solve": 2.8848648071289062e-05, 
  "time_sec_simulate_packet": 0.00011110305786132812, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_ipv4", 
    "parse_ipv4 -> parse_tcp", 
    "parse_tcp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "u'bng749'", 
    "(True, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 5, 
  "result": "SUCCESS", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_ipv4", 
    "parse_tcp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'tbl_bng749', u'bng749')", 
    "(u'node_5', (False, None))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [
    {
      "port": 0, 
      "packet_len_bytes": 64, 
      "packet_hexstr": "000000000000000000000000000088a8000081000000080000000000000000000006000000000000000000000000000000000000000000000000000000000000"
    }
  ], 
  "parser_path_len": 8, 
  "ingress_path_len": 4, 
  "time_sec_generate_ingress_constraints": 0.0013780593872070312, 
  "time_sec_solve": 0.010174989700317383, 
  "time_sec_simulate_packet": 0.04456281661987305, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_ipv4", 
    "parse_ipv4 -> parse_tcp", 
    "parse_tcp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "u'bng749'", 
    "(False, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 6, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_ipv4", 
    "parse_tcp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 8, 
  "ingress_path_len": 2, 
  "time_sec_generate_ingress_constraints": 0.0013930797576904297, 
  "time_sec_solve": 3.0040740966796875e-05, 
  "time_sec_simulate_packet": 0.00010895729064941406, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_ipv4", 
    "parse_ipv4 -> parse_tcp", 
    "parse_tcp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 13, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "parse_udp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'node_10', (True, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS')))", 
    "(u'tbl_bng761', u'bng761')", 
    "(u'IngressPipe.upstream.lines', u'IngressPipe.upstream.set_line')", 
    "(u'tbl_bng499', u'bng499')", 
    "(u'IngressPipe.upstream.pppoe_punts', u'IngressPipe.upstream.punt')", 
    "(u'node_15', (True, (u'./p4src/bng.p4', 501, u'!(lmeta.punted)')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 13, 
  "time_sec_generate_ingress_constraints": 0.001374959945678711, 
  "time_sec_solve": 6.198883056640625e-05, 
  "time_sec_simulate_packet": 0.00014209747314453125, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> parse_udp", 
    "parse_udp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "(True, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS'))", 
    "u'bng761'", 
    "u'IngressPipe.upstream.set_line'", 
    "u'bng499'", 
    "u'IngressPipe.upstream.punt'", 
    "(True, (u'./p4src/bng.p4', 501, u'!(lmeta.punted)'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 18, 
  "result": "SUCCESS", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "parse_udp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'node_10', (True, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS')))", 
    "(u'tbl_bng761', u'bng761')", 
    "(u'IngressPipe.upstream.lines', u'IngressPipe.upstream.set_line')", 
    "(u'tbl_bng499', u'bng499')", 
    "(u'IngressPipe.upstream.pppoe_punts', u'IngressPipe.upstream.punt')", 
    "(u'node_15', (False, (u'./p4src/bng.p4', 501, u'!(lmeta.punted)')))", 
    "(u'IngressPipe.acl.acls', u'IngressPipe.acl.set_port')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (True, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))", 
    "(u'tbl_bng326', u'bng326')"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [
    "table_add IngressPipe.if_types IngressPipe.set_if_type 0 => 2", 
    "table_add IngressPipe.my_stations IngressPipe.set_my_station 0 0 => ", 
    "table_add IngressPipe.upstream.lines IngressPipe.upstream.set_line 0 0 0 => 0", 
    "table_add IngressPipe.upstream.pppoe_punts IngressPipe.upstream.punt 0 33&&&65535 =>  1", 
    "table_add IngressPipe.acl.acls IngressPipe.acl.set_port 0&&&511 2&&&7 0&&&281474976710655 0&&&281474976710655 34915&&&65535 0&&&4294967295 0&&&4294967295 17&&&255 0&&&65535 0&&&65535 => 0 1", 
    "table_add IngressPipe.accounting_ids IngressPipe.set_accounting_id 0 0 => 0"
  ], 
  "input_packets": [
    {
      "port": 0, 
      "packet_len_bytes": 54, 
      "packet_hexstr": "000000000000000000000000910000008863000000000000002100000000000000000011000000000000000000000000000000000000"
    }
  ], 
  "parser_path_len": 7, 
  "ingress_path_len": 17, 
  "time_sec_generate_ingress_constraints": 0.0008749961853027344, 
  "time_sec_solve": 0.010627985000610352, 
  "time_sec_simulate_packet": 0.22087621688842773, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> parse_udp", 
    "parse_udp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "(True, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS'))", 
    "u'bng761'", 
    "u'IngressPipe.upstream.set_line'", 
    "u'bng499'", 
    "u'IngressPipe.upstream.punt'", 
    "(False, (u'./p4src/bng.p4', 501, u'!(lmeta.punted)'))", 
    "u'IngressPipe.acl.set_port'", 
    "u'IngressPipe.set_accounting_id'", 
    "(True, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))", 
    "u'bng326'"
  ], 
  "table_setup_cmd_data": [
    {
      "command": "table_add", 
      "table_name": "IngressPipe.if_types", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_if_type", 
      "action_parameters": [
        {
          "name": "if_type", 
          "value": 2
        }
      ]
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.my_stations", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "ethernet.dst_addr", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_my_station", 
      "action_parameters": []
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.upstream.lines", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.c_tag", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.s_tag", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.upstream.set_line", 
      "action_parameters": [
        {
          "name": "line_id", 
          "value": 0
        }
      ]
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.upstream.pppoe_punts", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "pppoe.code", 
          "value": 0
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "pppoe.proto", 
          "value": 33, 
          "mask": 65535
        }
      ], 
      "action_name": "IngressPipe.upstream.punt", 
      "action_parameters": [], 
      "priority": 1
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.acl.acls", 
      "keys": [
        {
          "match_kind": "ternary", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0, 
          "mask": 511
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.if_type", 
          "value": 2, 
          "mask": 7
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ethernet.src_addr", 
          "value": 0, 
          "mask": 281474976710655
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ethernet.dst_addr", 
          "value": 0, 
          "mask": 281474976710655
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "eth_type.value", 
          "value": 34915, 
          "mask": 65535
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.src_addr", 
          "value": 0, 
          "mask": 4294967295
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.dst_addr", 
          "value": 0, 
          "mask": 4294967295
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.proto", 
          "value": 17, 
          "mask": 255
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.l4_sport", 
          "value": 0, 
          "mask": 65535
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.l4_dport", 
          "value": 0, 
          "mask": 65535
        }
      ], 
      "action_name": "IngressPipe.acl.set_port", 
      "action_parameters": [
        {
          "name": "port", 
          "value": 0
        }
      ], 
      "priority": 1
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.accounting_ids", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.line_id", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.cos_id", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_accounting_id", 
      "action_parameters": [
        {
          "name": "accounting_id", 
          "value": 0
        }
      ]
    }
  ]
},
{
  "log_file_id": 19, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "parse_udp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'node_10', (True, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS')))", 
    "(u'tbl_bng761', u'bng761')", 
    "(u'IngressPipe.upstream.lines', u'IngressPipe.upstream.set_line')", 
    "(u'tbl_bng499', u'bng499')", 
    "(u'IngressPipe.upstream.pppoe_punts', u'IngressPipe.upstream.punt')", 
    "(u'node_15', (False, (u'./p4src/bng.p4', 501, u'!(lmeta.punted)')))", 
    "(u'IngressPipe.acl.acls', u'IngressPipe.acl.set_port')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 16, 
  "time_sec_generate_ingress_constraints": 0.002602100372314453, 
  "time_sec_solve": 8.58306884765625e-05, 
  "time_sec_simulate_packet": 0.0002830028533935547, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> parse_udp", 
    "parse_udp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "(True, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS'))", 
    "u'bng761'", 
    "u'IngressPipe.upstream.set_line'", 
    "u'bng499'", 
    "u'IngressPipe.upstream.punt'", 
    "(False, (u'./p4src/bng.p4', 501, u'!(lmeta.punted)'))", 
    "u'IngressPipe.acl.set_port'", 
    "u'IngressPipe.set_accounting_id'", 
    "(False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 29, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "parse_udp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 7, 
  "time_sec_generate_ingress_constraints": 0.0016050338745117188, 
  "time_sec_solve": 3.409385681152344e-05, 
  "time_sec_simulate_packet": 0.0001430511474609375, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> parse_udp", 
    "parse_udp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 33, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "parse_udp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (False, None))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 3, 
  "time_sec_generate_ingress_constraints": 0.0015909671783447266, 
  "time_sec_solve": 2.8133392333984375e-05, 
  "time_sec_simulate_packet": 0.00011992454528808594, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> parse_udp", 
    "parse_udp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(False, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 34, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "parse_udp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 2, 
  "time_sec_generate_ingress_constraints": 0.0015330314636230469, 
  "time_sec_solve": 2.5987625122070312e-05, 
  "time_sec_simulate_packet": 0.0001220703125, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> parse_udp", 
    "parse_udp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 4, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'tbl_bng749', u'bng749')", 
    "(u'node_5', (True, None))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 4, 
  "time_sec_generate_ingress_constraints": 0.0015881061553955078, 
  "time_sec_solve": 3.1948089599609375e-05, 
  "time_sec_simulate_packet": 0.0001239776611328125, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "u'bng749'", 
    "(True, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 5, 
  "result": "SUCCESS", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'tbl_bng749', u'bng749')", 
    "(u'node_5', (False, None))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [
    {
      "port": 0, 
      "packet_len_bytes": 32, 
      "packet_hexstr": "0000000000000000000000000000810000008100000088640000000000000000"
    }
  ], 
  "parser_path_len": 7, 
  "ingress_path_len": 4, 
  "time_sec_generate_ingress_constraints": 0.0015149116516113281, 
  "time_sec_solve": 0.009684085845947266, 
  "time_sec_simulate_packet": 0.03352999687194824, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "u'bng749'", 
    "(False, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 6, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 2, 
  "time_sec_generate_ingress_constraints": 0.001486063003540039, 
  "time_sec_solve": 3.0994415283203125e-05, 
  "time_sec_simulate_packet": 0.00011396408081054688, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 10, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'nop')", 
    "(u'node_9', (False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'IngressPipe.acl.acls', u'IngressPipe.acl.punt')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (True, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 10, 
  "time_sec_generate_ingress_constraints": 0.0013630390167236328, 
  "time_sec_solve": 2.9087066650390625e-05, 
  "time_sec_simulate_packet": 0.00013899803161621094, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'nop'", 
    "(False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "u'IngressPipe.acl.punt'", 
    "u'IngressPipe.set_accounting_id'", 
    "(True, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 12, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'nop')", 
    "(u'node_9', (False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'IngressPipe.acl.acls', u'IngressPipe.acl.punt')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))", 
    "(u'node_47', (True, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 11, 
  "time_sec_generate_ingress_constraints": 0.001355886459350586, 
  "time_sec_solve": 2.5987625122070312e-05, 
  "time_sec_simulate_packet": 0.00014495849609375, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'nop'", 
    "(False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "u'IngressPipe.acl.punt'", 
    "u'IngressPipe.set_accounting_id'", 
    "(False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))", 
    "(True, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 13, 
  "result": "SUCCESS", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'nop')", 
    "(u'node_9', (False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'IngressPipe.acl.acls', u'IngressPipe.acl.punt')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))", 
    "(u'node_47', (False, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM')))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [
    "table_add IngressPipe.if_types IngressPipe.set_if_type 0 => 0", 
    "table_add IngressPipe.my_stations nop 0 0 => ", 
    "table_add IngressPipe.acl.acls IngressPipe.acl.punt 0&&&511 0&&&7 0&&&281474976710655 0&&&281474976710655 0&&&65535 0&&&4294967295 0&&&4294967295 0&&&255 0&&&65535 0&&&65535 =>  1", 
    "table_add IngressPipe.accounting_ids IngressPipe.set_accounting_id 0 0 => 0"
  ], 
  "input_packets": [
    {
      "port": 0, 
      "packet_len_bytes": 14, 
      "packet_hexstr": "0000000000000000000000000000"
    }
  ], 
  "parser_path_len": 3, 
  "ingress_path_len": 11, 
  "time_sec_generate_ingress_constraints": 0.0013570785522460938, 
  "time_sec_solve": 0.009418964385986328, 
  "time_sec_simulate_packet": 0.04970192909240723, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'nop'", 
    "(False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "u'IngressPipe.acl.punt'", 
    "u'IngressPipe.set_accounting_id'", 
    "(False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))", 
    "(False, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM'))"
  ], 
  "table_setup_cmd_data": [
    {
      "command": "table_add", 
      "table_name": "IngressPipe.if_types", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_if_type", 
      "action_parameters": [
        {
          "name": "if_type", 
          "value": 0
        }
      ]
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.my_stations", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "ethernet.dst_addr", 
          "value": 0
        }
      ], 
      "action_name": "nop", 
      "action_parameters": []
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.acl.acls", 
      "keys": [
        {
          "match_kind": "ternary", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0, 
          "mask": 511
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.if_type", 
          "value": 0, 
          "mask": 7
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ethernet.src_addr", 
          "value": 0, 
          "mask": 281474976710655
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ethernet.dst_addr", 
          "value": 0, 
          "mask": 281474976710655
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "eth_type.value", 
          "value": 0, 
          "mask": 65535
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.src_addr", 
          "value": 0, 
          "mask": 4294967295
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.dst_addr", 
          "value": 0, 
          "mask": 4294967295
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.proto", 
          "value": 0, 
          "mask": 255
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.l4_sport", 
          "value": 0, 
          "mask": 65535
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.l4_dport", 
          "value": 0, 
          "mask": 65535
        }
      ], 
      "action_name": "IngressPipe.acl.punt", 
      "action_parameters": [], 
      "priority": 1
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.accounting_ids", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.line_id", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.cos_id", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_accounting_id", 
      "action_parameters": [
        {
          "name": "accounting_id", 
          "value": 0
        }
      ]
    }
  ]
},
{
  "log_file_id": 19, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'nop')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 7, 
  "time_sec_generate_ingress_constraints": 0.0014231204986572266, 
  "time_sec_solve": 6.794929504394531e-05, 
  "time_sec_simulate_packet": 0.000125885009765625, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'nop'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 23, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (False, None))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 3, 
  "time_sec_generate_ingress_constraints": 0.0014579296112060547, 
  "time_sec_solve": 2.6941299438476562e-05, 
  "time_sec_simulate_packet": 0.00010800361633300781, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(False, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 24, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 2, 
  "time_sec_generate_ingress_constraints": 0.0013670921325683594, 
  "time_sec_solve": 2.4080276489257812e-05, 
  "time_sec_simulate_packet": 0.000102996826171875, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 4, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_ipv4", 
    "parse_icmp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'tbl_bng749', u'bng749')", 
    "(u'node_5', (True, None))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 4, 
  "time_sec_generate_ingress_constraints": 0.0015001296997070312, 
  "time_sec_solve": 3.1948089599609375e-05, 
  "time_sec_simulate_packet": 0.00012111663818359375, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_ipv4", 
    "parse_ipv4 -> parse_icmp", 
    "parse_icmp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "u'bng749'", 
    "(True, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 5, 
  "result": "SUCCESS", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_ipv4", 
    "parse_icmp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'tbl_bng749', u'bng749')", 
    "(u'node_5', (False, None))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [
    {
      "port": 0, 
      "packet_len_bytes": 56, 
      "packet_hexstr": "000000000000000000000000000088a800000800000000000000000000010000000000000000000000000000000000000000000000000000"
    }
  ], 
  "parser_path_len": 7, 
  "ingress_path_len": 4, 
  "time_sec_generate_ingress_constraints": 0.0014691352844238281, 
  "time_sec_solve": 0.010913848876953125, 
  "time_sec_simulate_packet": 0.03807711601257324, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_ipv4", 
    "parse_ipv4 -> parse_icmp", 
    "parse_icmp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "u'bng749'", 
    "(False, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 6, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_ipv4", 
    "parse_icmp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 2, 
  "time_sec_generate_ingress_constraints": 0.0013630390167236328, 
  "time_sec_solve": 2.9087066650390625e-05, 
  "time_sec_simulate_packet": 0.00010585784912109375, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_ipv4", 
    "parse_ipv4 -> parse_icmp", 
    "parse_icmp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 12, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'node_10', (False, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS')))", 
    "(u'node_31', (True, (u'./p4src/bng.p4', 763, u'lmeta.if_type == IF_CORE')))", 
    "(u'tbl_bng613', u'bng613')", 
    "(u'IngressPipe.downstream.lines_v4', u'IngressPipe.downstream.miss')", 
    "(u'node_34', (False, (u'./p4src/bng.p4', 362, u'hdr.ipv4.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 12, 
  "time_sec_generate_ingress_constraints": 0.0015079975128173828, 
  "time_sec_solve": 7.081031799316406e-05, 
  "time_sec_simulate_packet": 0.0001621246337890625, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "(False, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS'))", 
    "(True, (u'./p4src/bng.p4', 763, u'lmeta.if_type == IF_CORE'))", 
    "u'bng613'", 
    "u'IngressPipe.downstream.miss'", 
    "(False, (u'./p4src/bng.p4', 362, u'hdr.ipv4.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 16, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'node_10', (False, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS')))", 
    "(u'node_31', (True, (u'./p4src/bng.p4', 763, u'lmeta.if_type == IF_CORE')))", 
    "(u'tbl_bng613', u'bng613')", 
    "(u'IngressPipe.downstream.lines_v4', u'IngressPipe.downstream.miss')", 
    "(u'node_34', (True, (u'./p4src/bng.p4', 362, u'hdr.ipv4.isValid()')))", 
    "(u'IngressPipe.downstream.cos.services_v4', u'IngressPipe.downstream.cos.set_cos_id')", 
    "(u'IngressPipe.downstream.attachments_v4', u'IngressPipe.downstream.miss')", 
    "(u'node_38', (False, (u'./p4src/bng.p4', 304, u'hdr.ipv4.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 15, 
  "time_sec_generate_ingress_constraints": 0.0015769004821777344, 
  "time_sec_solve": 3.0994415283203125e-05, 
  "time_sec_simulate_packet": 0.0001800060272216797, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "(False, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS'))", 
    "(True, (u'./p4src/bng.p4', 763, u'lmeta.if_type == IF_CORE'))", 
    "u'bng613'", 
    "u'IngressPipe.downstream.miss'", 
    "(True, (u'./p4src/bng.p4', 362, u'hdr.ipv4.isValid()'))", 
    "u'IngressPipe.downstream.cos.set_cos_id'", 
    "u'IngressPipe.downstream.miss'", 
    "(False, (u'./p4src/bng.p4', 304, u'hdr.ipv4.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 23, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'node_10', (False, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS')))", 
    "(u'node_31', (True, (u'./p4src/bng.p4', 763, u'lmeta.if_type == IF_CORE')))", 
    "(u'tbl_bng613', u'bng613')", 
    "(u'IngressPipe.downstream.lines_v4', u'IngressPipe.downstream.miss')", 
    "(u'node_34', (True, (u'./p4src/bng.p4', 362, u'hdr.ipv4.isValid()')))", 
    "(u'IngressPipe.downstream.cos.services_v4', u'IngressPipe.downstream.cos.set_cos_id')", 
    "(u'IngressPipe.downstream.attachments_v4', u'IngressPipe.downstream.miss')", 
    "(u'node_38', (True, (u'./p4src/bng.p4', 304, u'hdr.ipv4.isValid()')))", 
    "(u'node_39', (False, (u'./p4src/bng.p4', 305, u'hdr.ipv4.ttl > 1')))", 
    "(u'tbl_bng308_0', u'bng308_0')", 
    "(u'tbl_will_drop_1', u'will_drop')", 
    "(u'IngressPipe.acl.acls', u'IngressPipe.acl.drop')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (True, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 21, 
  "time_sec_generate_ingress_constraints": 0.0015208721160888672, 
  "time_sec_solve": 7.200241088867188e-05, 
  "time_sec_simulate_packet": 0.00021004676818847656, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "(False, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS'))", 
    "(True, (u'./p4src/bng.p4', 763, u'lmeta.if_type == IF_CORE'))", 
    "u'bng613'", 
    "u'IngressPipe.downstream.miss'", 
    "(True, (u'./p4src/bng.p4', 362, u'hdr.ipv4.isValid()'))", 
    "u'IngressPipe.downstream.cos.set_cos_id'", 
    "u'IngressPipe.downstream.miss'", 
    "(True, (u'./p4src/bng.p4', 304, u'hdr.ipv4.isValid()'))", 
    "(False, (u'./p4src/bng.p4', 305, u'hdr.ipv4.ttl > 1'))", 
    "u'bng308_0'", 
    "u'will_drop'", 
    "u'IngressPipe.acl.drop'", 
    "u'IngressPipe.set_accounting_id'", 
    "(True, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 26, 
  "result": "SUCCESS", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'node_10', (False, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS')))", 
    "(u'node_31', (True, (u'./p4src/bng.p4', 763, u'lmeta.if_type == IF_CORE')))", 
    "(u'tbl_bng613', u'bng613')", 
    "(u'IngressPipe.downstream.lines_v4', u'IngressPipe.downstream.miss')", 
    "(u'node_34', (True, (u'./p4src/bng.p4', 362, u'hdr.ipv4.isValid()')))", 
    "(u'IngressPipe.downstream.cos.services_v4', u'IngressPipe.downstream.cos.set_cos_id')", 
    "(u'IngressPipe.downstream.attachments_v4', u'IngressPipe.downstream.miss')", 
    "(u'node_38', (True, (u'./p4src/bng.p4', 304, u'hdr.ipv4.isValid()')))", 
    "(u'node_39', (False, (u'./p4src/bng.p4', 305, u'hdr.ipv4.ttl > 1')))", 
    "(u'tbl_bng308_0', u'bng308_0')", 
    "(u'tbl_will_drop_1', u'will_drop')", 
    "(u'IngressPipe.acl.acls', u'IngressPipe.acl.drop')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))", 
    "(u'node_47', (True, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM')))", 
    "(u'tbl_bng328', u'bng328')"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [
    "table_add IngressPipe.if_types IngressPipe.set_if_type 0 => 1", 
    "table_add IngressPipe.my_stations IngressPipe.set_my_station 0 0 => ", 
    "table_add IngressPipe.downstream.lines_v4 IngressPipe.downstream.miss 0 => ", 
    "table_add IngressPipe.downstream.cos.services_v4 IngressPipe.downstream.cos.set_cos_id 0&&&4294967295 0&&&4294967295 0&&&255 0->0 0->0 => 0 1", 
    "table_add IngressPipe.downstream.attachments_v4 IngressPipe.downstream.miss 0 => ", 
    "table_add IngressPipe.acl.acls IngressPipe.acl.drop 0&&&511 1&&&7 0&&&281474976710655 0&&&281474976710655 34915&&&65535 0&&&4294967295 0&&&4294967295 0&&&255 0&&&65535 0&&&65535 =>  1", 
    "table_add IngressPipe.accounting_ids IngressPipe.set_accounting_id 0 0 => 0"
  ], 
  "input_packets": [
    {
      "port": 0, 
      "packet_len_bytes": 50, 
      "packet_hexstr": "0000000000000000000000009100000081000000886300000000000000210000000000000000000000000000000000000000"
    }
  ], 
  "parser_path_len": 7, 
  "ingress_path_len": 23, 
  "time_sec_generate_ingress_constraints": 0.000982046127319336, 
  "time_sec_solve": 0.012310981750488281, 
  "time_sec_simulate_packet": 0.4534420967102051, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "(False, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS'))", 
    "(True, (u'./p4src/bng.p4', 763, u'lmeta.if_type == IF_CORE'))", 
    "u'bng613'", 
    "u'IngressPipe.downstream.miss'", 
    "(True, (u'./p4src/bng.p4', 362, u'hdr.ipv4.isValid()'))", 
    "u'IngressPipe.downstream.cos.set_cos_id'", 
    "u'IngressPipe.downstream.miss'", 
    "(True, (u'./p4src/bng.p4', 304, u'hdr.ipv4.isValid()'))", 
    "(False, (u'./p4src/bng.p4', 305, u'hdr.ipv4.ttl > 1'))", 
    "u'bng308_0'", 
    "u'will_drop'", 
    "u'IngressPipe.acl.drop'", 
    "u'IngressPipe.set_accounting_id'", 
    "(False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))", 
    "(True, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM'))", 
    "u'bng328'"
  ], 
  "table_setup_cmd_data": [
    {
      "command": "table_add", 
      "table_name": "IngressPipe.if_types", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_if_type", 
      "action_parameters": [
        {
          "name": "if_type", 
          "value": 1
        }
      ]
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.my_stations", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "ethernet.dst_addr", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_my_station", 
      "action_parameters": []
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.downstream.lines_v4", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "ipv4.dst_addr", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.downstream.miss", 
      "action_parameters": []
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.downstream.cos.services_v4", 
      "keys": [
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.src_addr", 
          "value": 0, 
          "mask": 4294967295
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.dst_addr", 
          "value": 0, 
          "mask": 4294967295
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.proto", 
          "value": 0, 
          "mask": 255
        }, 
        {
          "match_kind": "range", 
          "key_field_name": "scalars.userMetadata.l4_sport", 
          "min_value": 0, 
          "max_value": 0
        }, 
        {
          "match_kind": "range", 
          "key_field_name": "scalars.userMetadata.l4_dport", 
          "min_value": 0, 
          "max_value": 0
        }
      ], 
      "action_name": "IngressPipe.downstream.cos.set_cos_id", 
      "action_parameters": [
        {
          "name": "cos_id", 
          "value": 0
        }
      ], 
      "priority": 1
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.downstream.attachments_v4", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.line_id", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.downstream.miss", 
      "action_parameters": []
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.acl.acls", 
      "keys": [
        {
          "match_kind": "ternary", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0, 
          "mask": 511
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.if_type", 
          "value": 1, 
          "mask": 7
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ethernet.src_addr", 
          "value": 0, 
          "mask": 281474976710655
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ethernet.dst_addr", 
          "value": 0, 
          "mask": 281474976710655
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "eth_type.value", 
          "value": 34915, 
          "mask": 65535
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.src_addr", 
          "value": 0, 
          "mask": 4294967295
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.dst_addr", 
          "value": 0, 
          "mask": 4294967295
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.proto", 
          "value": 0, 
          "mask": 255
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.l4_sport", 
          "value": 0, 
          "mask": 65535
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.l4_dport", 
          "value": 0, 
          "mask": 65535
        }
      ], 
      "action_name": "IngressPipe.acl.drop", 
      "action_parameters": [], 
      "priority": 1
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.accounting_ids", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.line_id", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.cos_id", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_accounting_id", 
      "action_parameters": [
        {
          "name": "accounting_id", 
          "value": 0
        }
      ]
    }
  ]
},
{
  "log_file_id": 27, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'node_10', (False, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS')))", 
    "(u'node_31', (True, (u'./p4src/bng.p4', 763, u'lmeta.if_type == IF_CORE')))", 
    "(u'tbl_bng613', u'bng613')", 
    "(u'IngressPipe.downstream.lines_v4', u'IngressPipe.downstream.miss')", 
    "(u'node_34', (True, (u'./p4src/bng.p4', 362, u'hdr.ipv4.isValid()')))", 
    "(u'IngressPipe.downstream.cos.services_v4', u'IngressPipe.downstream.cos.set_cos_id')", 
    "(u'IngressPipe.downstream.attachments_v4', u'IngressPipe.downstream.miss')", 
    "(u'node_38', (True, (u'./p4src/bng.p4', 304, u'hdr.ipv4.isValid()')))", 
    "(u'node_39', (False, (u'./p4src/bng.p4', 305, u'hdr.ipv4.ttl > 1')))", 
    "(u'tbl_bng308_0', u'bng308_0')", 
    "(u'tbl_will_drop_1', u'will_drop')", 
    "(u'IngressPipe.acl.acls', u'IngressPipe.acl.drop')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))", 
    "(u'node_47', (False, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM')))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 22, 
  "time_sec_generate_ingress_constraints": 0.0020360946655273438, 
  "time_sec_solve": 5.984306335449219e-05, 
  "time_sec_simulate_packet": 0.0003190040588378906, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "(False, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS'))", 
    "(True, (u'./p4src/bng.p4', 763, u'lmeta.if_type == IF_CORE'))", 
    "u'bng613'", 
    "u'IngressPipe.downstream.miss'", 
    "(True, (u'./p4src/bng.p4', 362, u'hdr.ipv4.isValid()'))", 
    "u'IngressPipe.downstream.cos.set_cos_id'", 
    "u'IngressPipe.downstream.miss'", 
    "(True, (u'./p4src/bng.p4', 304, u'hdr.ipv4.isValid()'))", 
    "(False, (u'./p4src/bng.p4', 305, u'hdr.ipv4.ttl > 1'))", 
    "u'bng308_0'", 
    "u'will_drop'", 
    "u'IngressPipe.acl.drop'", 
    "u'IngressPipe.set_accounting_id'", 
    "(False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))", 
    "(False, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 41, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 7, 
  "time_sec_generate_ingress_constraints": 0.001596212387084961, 
  "time_sec_solve": 3.3855438232421875e-05, 
  "time_sec_simulate_packet": 0.00014209747314453125, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 45, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (False, None))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 3, 
  "time_sec_generate_ingress_constraints": 0.0015969276428222656, 
  "time_sec_solve": 2.6941299438476562e-05, 
  "time_sec_simulate_packet": 0.0001289844512939453, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(False, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 46, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 2, 
  "time_sec_generate_ingress_constraints": 0.0015327930450439453, 
  "time_sec_solve": 2.7179718017578125e-05, 
  "time_sec_simulate_packet": 0.00011897087097167969, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 4, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'tbl_bng749', u'bng749')", 
    "(u'node_5', (True, None))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 6, 
  "ingress_path_len": 4, 
  "time_sec_generate_ingress_constraints": 0.0016019344329833984, 
  "time_sec_solve": 3.2901763916015625e-05, 
  "time_sec_simulate_packet": 0.00012803077697753906, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "u'bng749'", 
    "(True, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 5, 
  "result": "SUCCESS", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'tbl_bng749', u'bng749')", 
    "(u'node_5', (False, None))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [
    {
      "port": 0, 
      "packet_len_bytes": 28, 
      "packet_hexstr": "00000000000000000000000000008100000088640000000000000000"
    }
  ], 
  "parser_path_len": 6, 
  "ingress_path_len": 4, 
  "time_sec_generate_ingress_constraints": 0.0015850067138671875, 
  "time_sec_solve": 0.009691953659057617, 
  "time_sec_simulate_packet": 0.032028913497924805, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "u'bng749'", 
    "(False, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 6, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 6, 
  "ingress_path_len": 2, 
  "time_sec_generate_ingress_constraints": 0.0018608570098876953, 
  "time_sec_solve": 4.506111145019531e-05, 
  "time_sec_simulate_packet": 0.00015592575073242188, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 10, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'nop')", 
    "(u'node_9', (False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'IngressPipe.acl.acls', u'nop')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (True, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 10, 
  "time_sec_generate_ingress_constraints": 0.0014688968658447266, 
  "time_sec_solve": 3.1948089599609375e-05, 
  "time_sec_simulate_packet": 0.0001499652862548828, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'nop'", 
    "(False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "u'nop'", 
    "u'IngressPipe.set_accounting_id'", 
    "(True, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 12, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'nop')", 
    "(u'node_9', (False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'IngressPipe.acl.acls', u'nop')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))", 
    "(u'node_47', (True, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 11, 
  "time_sec_generate_ingress_constraints": 0.001444101333618164, 
  "time_sec_solve": 3.0994415283203125e-05, 
  "time_sec_simulate_packet": 0.00015401840209960938, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'nop'", 
    "(False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "u'nop'", 
    "u'IngressPipe.set_accounting_id'", 
    "(False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))", 
    "(True, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 13, 
  "result": "SUCCESS", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'nop')", 
    "(u'node_9', (False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'IngressPipe.acl.acls', u'nop')", 
    "(u'IngressPipe.accounting_ids', u'IngressPipe.set_accounting_id')", 
    "(u'node_45', (False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM')))", 
    "(u'node_47', (False, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM')))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [
    "table_add IngressPipe.if_types IngressPipe.set_if_type 0 => 0", 
    "table_add IngressPipe.my_stations nop 0 0 => ", 
    "table_add IngressPipe.acl.acls nop 0&&&511 0&&&7 0&&&281474976710655 0&&&281474976710655 0&&&65535 0&&&4294967295 0&&&4294967295 0&&&255 0&&&65535 0&&&65535 =>  1", 
    "table_add IngressPipe.accounting_ids IngressPipe.set_accounting_id 0 0 => 0"
  ], 
  "input_packets": [
    {
      "port": 0, 
      "packet_len_bytes": 14, 
      "packet_hexstr": "0000000000000000000000000000"
    }
  ], 
  "parser_path_len": 3, 
  "ingress_path_len": 11, 
  "time_sec_generate_ingress_constraints": 0.0014371871948242188, 
  "time_sec_solve": 0.010125875473022461, 
  "time_sec_simulate_packet": 0.05340909957885742, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'nop'", 
    "(False, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "u'nop'", 
    "u'IngressPipe.set_accounting_id'", 
    "(False, (u'./p4src/bng.p4', 325, u'lmeta.direction == DIR_UPSTREAM'))", 
    "(False, (u'./p4src/bng.p4', 327, u'lmeta.direction == DIR_DOWNSTREAM'))"
  ], 
  "table_setup_cmd_data": [
    {
      "command": "table_add", 
      "table_name": "IngressPipe.if_types", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_if_type", 
      "action_parameters": [
        {
          "name": "if_type", 
          "value": 0
        }
      ]
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.my_stations", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "ethernet.dst_addr", 
          "value": 0
        }
      ], 
      "action_name": "nop", 
      "action_parameters": []
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.acl.acls", 
      "keys": [
        {
          "match_kind": "ternary", 
          "key_field_name": "standard_metadata.ingress_port", 
          "value": 0, 
          "mask": 511
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.if_type", 
          "value": 0, 
          "mask": 7
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ethernet.src_addr", 
          "value": 0, 
          "mask": 281474976710655
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ethernet.dst_addr", 
          "value": 0, 
          "mask": 281474976710655
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "eth_type.value", 
          "value": 0, 
          "mask": 65535
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.src_addr", 
          "value": 0, 
          "mask": 4294967295
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.dst_addr", 
          "value": 0, 
          "mask": 4294967295
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "ipv4.proto", 
          "value": 0, 
          "mask": 255
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.l4_sport", 
          "value": 0, 
          "mask": 65535
        }, 
        {
          "match_kind": "ternary", 
          "key_field_name": "scalars.userMetadata.l4_dport", 
          "value": 0, 
          "mask": 65535
        }
      ], 
      "action_name": "nop", 
      "action_parameters": [], 
      "priority": 1
    }, 
    {
      "command": "table_add", 
      "table_name": "IngressPipe.accounting_ids", 
      "keys": [
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.line_id", 
          "value": 0
        }, 
        {
          "match_kind": "exact", 
          "key_field_name": "scalars.userMetadata.cos_id", 
          "value": 0
        }
      ], 
      "action_name": "IngressPipe.set_accounting_id", 
      "action_parameters": [
        {
          "name": "accounting_id", 
          "value": 0
        }
      ]
    }
  ]
},
{
  "log_file_id": 19, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'nop')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 7, 
  "time_sec_generate_ingress_constraints": 0.0015430450439453125, 
  "time_sec_solve": 7.605552673339844e-05, 
  "time_sec_simulate_packet": 0.00013494491577148438, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'nop'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 23, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (False, None))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 3, 
  "time_sec_generate_ingress_constraints": 0.001528024673461914, 
  "time_sec_solve": 2.7894973754882812e-05, 
  "time_sec_simulate_packet": 0.00011301040649414062, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(False, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 24, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_eth_type", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 3, 
  "ingress_path_len": 2, 
  "time_sec_generate_ingress_constraints": 0.0014259815216064453, 
  "time_sec_solve": 2.5033950805664062e-05, 
  "time_sec_simulate_packet": 0.00011014938354492188, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_eth_type", 
    "parse_eth_type -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 4, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_ipv4", 
    "parse_tcp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'tbl_bng749', u'bng749')", 
    "(u'node_5', (True, None))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 8, 
  "ingress_path_len": 4, 
  "time_sec_generate_ingress_constraints": 0.0014319419860839844, 
  "time_sec_solve": 2.9087066650390625e-05, 
  "time_sec_simulate_packet": 0.0001239776611328125, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_ipv4", 
    "parse_ipv4 -> parse_tcp", 
    "parse_tcp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "u'bng749'", 
    "(True, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 5, 
  "result": "SUCCESS", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_ipv4", 
    "parse_tcp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'tbl_bng749', u'bng749')", 
    "(u'node_5', (False, None))"
  ], 
  "complete_path": true, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [
    {
      "port": 0, 
      "packet_len_bytes": 64, 
      "packet_hexstr": "000000000000000000000000000088a8000081000000080000000000000000000006000000000000000000000000000000000000000000000000000000000000"
    }
  ], 
  "parser_path_len": 8, 
  "ingress_path_len": 4, 
  "time_sec_generate_ingress_constraints": 0.0014889240264892578, 
  "time_sec_solve": 0.010804176330566406, 
  "time_sec_simulate_packet": 0.047505855560302734, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_ipv4", 
    "parse_ipv4 -> parse_tcp", 
    "parse_tcp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(True, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "u'bng749'", 
    "(False, None)"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 6, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_cpu_out", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_vlan2", 
    "parse_eth_type", 
    "parse_ipv4", 
    "parse_tcp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 8, 
  "ingress_path_len": 2, 
  "time_sec_generate_ingress_constraints": 0.0014269351959228516, 
  "time_sec_solve": 4.00543212890625e-05, 
  "time_sec_simulate_packet": 0.00010991096496582031, 
  "parser_path": [
    "start -> parse_cpu_out", 
    "parse_cpu_out -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_vlan2", 
    "parse_vlan2 -> parse_eth_type", 
    "parse_eth_type -> parse_ipv4", 
    "parse_ipv4 -> parse_tcp", 
    "parse_tcp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 16, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "parse_udp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'node_10', (True, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS')))", 
    "(u'tbl_bng761', u'bng761')", 
    "(u'IngressPipe.upstream.lines', u'IngressPipe.upstream.set_line')", 
    "(u'tbl_bng499', u'bng499')", 
    "(u'IngressPipe.upstream.pppoe_punts', u'nop')", 
    "(u'node_15', (True, (u'./p4src/bng.p4', 501, u'!(lmeta.punted)')))", 
    "(u'node_16', (False, (u'./p4src/bng.p4', 502, u'lmeta.line_id == LINE_UNKNOWN')))", 
    "(u'node_19', (True, None))", 
    "(u'node_20', (False, (u'./p4src/bng.p4', 362, u'hdr.ipv4.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 16, 
  "time_sec_generate_ingress_constraints": 0.0013518333435058594, 
  "time_sec_solve": 2.8133392333984375e-05, 
  "time_sec_simulate_packet": 0.00015783309936523438, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> parse_udp", 
    "parse_udp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "(True, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS'))", 
    "u'bng761'", 
    "u'IngressPipe.upstream.set_line'", 
    "u'bng499'", 
    "u'nop'", 
    "(True, (u'./p4src/bng.p4', 501, u'!(lmeta.punted)'))", 
    "(False, (u'./p4src/bng.p4', 502, u'lmeta.line_id == LINE_UNKNOWN'))", 
    "(True, None)", 
    "(False, (u'./p4src/bng.p4', 362, u'hdr.ipv4.isValid()'))"
  ], 
  "table_setup_cmd_data": []
},
{
  "log_file_id": 22, 
  "result": "NO_PACKET_FOUND", 
  "expected_path": [
    "start", 
    "parse_ethernet", 
    "parse_vlan", 
    "parse_eth_type", 
    "parse_pppoe", 
    "parse_ipv4", 
    "parse_udp", 
    "sink", 
    "(u'tbl_act', u'act')", 
    "(u'node_3', (False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()')))", 
    "(u'node_5', (True, None))", 
    "(u'IngressPipe.if_types', u'IngressPipe.set_if_type')", 
    "(u'tbl_bng756', u'bng756')", 
    "(u'IngressPipe.my_stations', u'IngressPipe.set_my_station')", 
    "(u'node_9', (True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit')))", 
    "(u'node_10', (True, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS')))", 
    "(u'tbl_bng761', u'bng761')", 
    "(u'IngressPipe.upstream.lines', u'IngressPipe.upstream.set_line')", 
    "(u'tbl_bng499', u'bng499')", 
    "(u'IngressPipe.upstream.pppoe_punts', u'nop')", 
    "(u'node_15', (True, (u'./p4src/bng.p4', 501, u'!(lmeta.punted)')))", 
    "(u'node_16', (False, (u'./p4src/bng.p4', 502, u'lmeta.line_id == LINE_UNKNOWN')))", 
    "(u'node_19', (True, None))", 
    "(u'node_20', (True, (u'./p4src/bng.p4', 362, u'hdr.ipv4.isValid()')))", 
    "(u'IngressPipe.upstream.cos.services_v4', u'IngressPipe.upstream.cos.set_cos_id')", 
    "(u'node_23', (True, (u'./p4src/bng.p4', 510, u'hdr.ipv4.isValid()')))", 
    "(u'IngressPipe.upstream.attachments_v4', u'nop')", 
    "(u'IngressPipe.upstream.routes_v4', u'IngressPipe.upstream.route_v4')", 
    "(u'node_26', (False, (u'./p4src/bng.p4', 304, u'hdr.ipv4.isValid()')))"
  ], 
  "complete_path": false, 
  "ss_cli_setup_cmds": [], 
  "input_packets": [], 
  "parser_path_len": 7, 
  "ingress_path_len": 21, 
  "time_sec_generate_ingress_constraints": 0.001336812973022461, 
  "time_sec_solve": 6.318092346191406e-05, 
  "time_sec_simulate_packet": 0.00018286705017089844, 
  "parser_path": [
    "start -> parse_ethernet", 
    "parse_ethernet -> parse_vlan", 
    "parse_vlan -> parse_eth_type", 
    "parse_eth_type -> parse_pppoe", 
    "parse_pppoe -> parse_ipv4", 
    "parse_ipv4 -> parse_udp", 
    "parse_udp -> sink"
  ], 
  "ingress_path": [
    "u'act'", 
    "(False, (u'./p4src/bng.p4', 748, u'hdr.cpu_out.isValid()'))", 
    "(True, None)", 
    "u'IngressPipe.set_if_type'", 
    "u'bng756'", 
    "u'IngressPipe.set_my_station'", 
    "(True, (u'./p4src/bng.p4', 759, u'lmeta.my_station_hit'))", 
    "(True, (u'./p4src/bng.p4', 760, u'lmeta.if_type == IF_ACCESS'))", 
    "u'bng761'", 
    "u'IngressPipe.upstream.set_line'", 
    "u'bng499'", 
    "u'nop'", 
    "(True, (u'./p4src/bng.p4', 501, u'!(lmeta.punted)'))", 
    "(False, (u'./p4src/bng.p4', 502, u'lmeta.line_id == LINE_UNKNOWN'))", 
    "(True, None)", 
    "(True, (u'./p4src/bng.p4', 362, u'hdr.ipv4.isValid()'))", 
    "u'IngressPipe.upstream.cos.set_cos_id'", 
    "(True, (u'./p4src/bng.p4', 510, u'hdr.ipv4.isValid()'))", 
    "u'nop'", 
    "u'IngressPipe.upstream.route_v4'", 
    "(False, (u'./p4src/bng.p4', 304, u'hdr.ipv4.isValid()'))"
  ], 
  "table_setup_cmd_data": []
}